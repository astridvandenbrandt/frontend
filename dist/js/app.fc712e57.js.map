{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/components/TreeVis.vue","webpack:///./src/components/TreeVis.vue?e5a5","webpack:///./src/components/GeneVariantVis.vue","webpack:///./src/components/GeneVariantVis.vue?6a69","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/components/GeneVariantVis.vue?619a","webpack:///./src/components/TreeVis.vue?5808","webpack:///./src/components/buttons/sort-down.svg","webpack:///./src/components/buttons/arrow-left.svg","webpack:///./src/components/buttons/arrow-right.svg","webpack:///./src/App.vue?9c45"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","class","ref","type","checked","methods","updateVis","data_tree","vis","this","parseNewick","a","e","split","branchset","pop","h","parseFloat","root","sum","sort","b","leaves","lnghts","lts","ancestors","maxLen","xScale","domain","renderVis","updateTreeChart","dataLinks","dataNodes","visTreeUpdate","g","selectAll","exit","remove","visTreeEnter","enter","append","attr","merge","transition","horizontalStraightBranchLengths","visTreeNodesUpdate","visTreeNodesEnter","children","rootDist","x","visTreeLabelsUpdate","visTreeLabelsEnter","text","style","updateDendrogramChart","horizontalStraightDendrogram","y","array","source","target","line","parent","curve","cluster","links","descendants","xAxisGroup","xAxis","on","mounted","margin","top","right","bottom","left","width","node","clientWidth","height","svg","size","range","ticks","tickSizeOuter","tickSizeInner","render","src","alt","title","for","data_mutations","data_phenos","data_pheno_dtf3","filter","item","pheno","data_pheno_dtf1","data_pheno_origin","data_pheno_group","unique","index","self","indexOf","values","test","I","taker","constructor","from","flat_data","pos","map","base","base_hover","accession","nr_accessions","Set","length_gene","mutations","max_mutations","start","globalBrushStart","end","globalBrushEnd","updateSort","flat_data_slice","flat_data_slice_default","genePositions","geneAccessions","original_map","localeCompare","group","origin","dtf3","dtf1","sortingOptions","dtf1_rev","reverse","dtf3_rev","group_rev","origin_rev","sortingOptionsPheno","xScaleContext","yScaleContext","yScaleBarcode","xScaleFocus","yScaleFocus","xScalePhenos","yScalePhenos","xScalePhenoBars","yScalePhenoBars","xScalePhenoBars2","yScalePhenoBars2","rows_data_slice_default","Array","_","visPhenoBarUpdate2","phenoBars2","visPhenoBarEnter2","bandwidth","visPhenoBarUpdate","phenoBars","visPhenoBarEnter","visGeneUpdate","svgContext","visGeneEnter","focusHeight","brush","move","updateLabelBrush","brushed","brushUpdate","updateVariantFocusChart","visPhenoUpdate","phenoChart","visPhenoEnter","selection","rangeSelected","invert","startUpdate","Math","round","endUpdate","side","brushClass","xPos","textUpdate","svgContextLabels","textEnter","svgFocus","visCellsUpdate","visCellsEnter","colors","flat_data_slice_updated","flat_data_slice_updated_final","rows_data_slice_updated","xAxisFocus","tickValues","select","mouseoverBar","mousemoveBar","mouseleaveBar","mouseover","mousemove","mouseleave","colorScaleDTF1","colorScaleDTF3","colorScaleGroup","colorScaleOrigin","xAxisContextG","xAxisContext","yAxisContextG","yAxisContext","xAxisBarcodeG","xAxisBarcode","yAxisBarcodeG","yAxisBarcode","xAxisFocusG","yAxisFocusG","yAxisFocus","xAxisPhenosG","xAxisPhenos","yAxisPhenosG","yAxisPhenos","xAxisPhenoBarsG","xAxisPhenoBars","yAxisPhenoBarsG","yAxisPhenoBars","xAxisPhenoBarsG2","xAxisPhenoBars2","yAxisPhenoBarsG2","yAxisPhenoBars2","mouseoverBarcode","mousemoveBarcode","event","html","leftColWidth","topRowHeight","mouseleaveBarcode","mouseleavePheno","mouseoverPheno","mousemovePheno","midColWidth","mouseleavePhenoBar","mouseoverPhenoBar","mousemovePhenoBar","phenoChartWidth","mouseleavePhenoBar2","mouseoverPhenoBar2","mousemovePhenoBar2","updateMSAorder","sortingOption","varBarcodeChart","duration","xScaleBarcode","updatePhenosOrder","brushArrow","arrow","rangeOld","selected","selectedBrush","start_updated","end_updated","parseInt","newAcc","selVR","selectedVisRef","visBarcodeUpdate","visBarcodeEnter","visBarcodeUpdateLabels","visBarcodeEnterLabels","containerWidth","containerHeight","innerMargin","legendHeight","variantSumWidth","variantBarcodeChartWidth","rightColWidth","phenoBarsWidth","bottomRowHeight","A","G","C","T","dataLabels","cols","bases","orders","ordersPheno","brushSizes","1","2","3","4","padding","scale","extent","labelL","labelR","legendVariants","keys","components","TreeVis","GeneVariantVis","loadDataMSA","loadDataMut","loadDataTree","loadDataPheno","console","log","geneIDs","AT1G01010_1","AT1G01020_1","AT1G01030_1","AT1G01040_1","AT1G01050_1","AT1G01060_1","AT1G11460_1","AT1G02820_1","AT5G47700_1","accessionNames","accessionIDs","_ref","selectedGeneId","accessionsGene","accessionButton","treeTypes","kmer_distance","gene_distance","ani","fetchData","fetchDataTree","updateData","selectedGene","selectedAcc","accessionButtonValueUpdate","accessionButtonValueEnter","selectedAccession","selectedTree","treeType","fetch","response","componentTree","$refs","geneID","data_msa","data_msa_mutations","componentVariantDetails","app","createApp","App","config","productionTip","mount"],"mappings":"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","file":"js/app.fc712e57.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div id=\"app\">\n    <div class=\"container-fluid\">\n      <div class=\"min-vh-100\">\n        <!-- <div class=\"row\">\n          <div class=\"col-2\">\n            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSdE9VeqzUMYN5ZnWicPdOLSfYOdD8OhFHiTxBt-lAMWdEEX4w/viewform?usp=sf_link\" class=\"btn btn-warning btn-sm\" role=\"button\" aria-pressed=\"true\"> \n              Feedback Survey</a>\n          </div>\n          </div> -->\n        <div class=\"row gx-2\">\n          <div class=\"col-md-2\">\n            <div class=\"sidebar-section\">\n              <div class=\"sidebar-item\" id=\"sidebar-menu-header\">\n                <h4>Menu</h4>\n              </div>\n              <div class=\"sidebar-item\">\n                <label for=\"selectButtonData\"> Gene: </label>\n                <select class=\"selectButtonVariants\" id=\"selectButtonData\">\n                </select>\n              </div>\n              <div class=\"sidebar-item\">\n                <label for=\"selectButtonData\"> Visual Reference: </label>\n                <select class=\"selectButtonVariants\" id=\"selectButtonAccessionData\">\n                </select>\n              </div>\n              <div class=\"sidebar-item\">\n                <label for=\"selectButtonData\"> Tree Type: </label>\n                <select class=\"selectButtonVariants\" id=\"selectButtonTreeData\">\n                </select>\n              </div>\n              <!-- <div class=\"sidebar-item\">\n                <p>Select Phenotypes</p>\n              </div> -->\n            </div>\n            <div class=\"content-section\" id=\"tree-comp\">\n              <div class=\"content-title\">\n                Species Tree\n              </div>\n              <TreeVis ref=\"tree_data\" />\n            </div>\n          </div>\n\n          <!-- <div class=\"col-md-2\">\n            <div class=\"content-section\"> -->\n              <!-- <VariantOverview ref=\"variant_data_overview\" /> -->\n              <!-- <div class=\"content-title\">\n                <p>Matrix dragging</p>\n              </div> -->\n              <!-- <matrixDrag/> -->\n            <!-- </div>\n          </div> -->\n          \n          <div class=\"col-md-10\">\n            <!-- <div class=\"content-section\"> -->\n              <!-- <VariantOverview ref=\"variant_data_overview\" /> -->\n              <!-- <div class=\"content-title\">\n                <p>Variant Summary</p>\n              </div>\n            </div> -->\n            <div class=\"content-section\">\n              <!-- <VariantOverview ref=\"variant_data_overview\" /> -->\n              <div class=\"content-title\">\n                Gene Sequences and Phenotypes\n              </div>\n              <GeneVariantVis ref=\"variant_data\" />\n            </div>\n          </div>\n          <!-- <div class=\"col-md-2\"> -->\n            <!-- <div class=\"content-section\">\n              <div class=\"content-title\">\n                <p>Sequence Similarity</p>\n              </div>\n            </div> -->\n           \n            <!-- <div class=\"content-section\">\n              <div class=\"content-title\">\n                <p>Matrix rows example</p>\n              </div>\n              <matrixDrag/>\n            </div> -->\n          <!-- </div> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport TreeVis from \"./components/TreeVis.vue\";\nimport GeneVariantVis from \"./components/GeneVariantVis.vue\";\n// import matrixDrag from \"./components/matrixDrag.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    TreeVis,\n    GeneVariantVis,\n    // matrixDrag\n  },\n  data() {\n    return {\n      loadDataMSA: {},\n      loadDataMut: {},\n      loadDataTree: {},\n      loadDataPheno: {}\n    };\n  },\n  mounted() {\n    console.log(\"App loaded\");\n\n    // Gene Ids\n    const geneIDs = {\n      AT1G01010_1: \"AT1G01010\",\n      AT1G01020_1: \"AT1G01020\",\n      AT1G01030_1: \"AT1G01030\",\n      AT1G01040_1: \"AT1G01040\",\n      AT1G01050_1: \"AT1G01050\",\n      AT1G01060_1: \"AT1G01060\",\n      AT1G11460_1: \"AT1G11460\",\n      AT1G02820_1: \"AT1G02820\",\n      AT5G47700_1: \"AT5G47700\",\n\n    };\n\n    const accessionNames = {\n      AT1G01010_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT1G01020_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT1G01030_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT1G01040_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT1G01050_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT1G01060_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT1G11460_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n      ],\n      AT1G02820_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi\", name: \"4_Cvi\"},\n        {ref:\"_5_Eri\", name: \"5_Eri\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha\", name: \"8_Sha\"},\n      ],\n      AT5G47700_1: [\n        {ref : \"_ref\", name: \"none\"},\n        {ref: \"_1_Col-0\", name:\"1_Col-0\"},\n        {ref:\"_2_An-1\", name: \"2_An-1\"},\n        {ref:\"_3_C24\", name:  \"3_C24\"},\n        {ref:\"_4_Cvi(1)\", name: \"4_Cvi(1)\"},\n        {ref:\"_4_Cvi(2)\", name: \"4_Cvi(2)\"},\n        {ref:\"_5_Eri(1)\", name: \"5_Eri(1)\"},\n        {ref:\"_5_Eri(2)\", name: \"5_Eri(2)\"},\n        {ref:\"_6_Kyo\", name: \"6_Kyo\"},\n        {ref:\"_7_Ler\", name: \"7_Ler\"},\n        {ref:\"_8_Sha(1)\", name: \"8_Sha(1)\"},\n        {ref:\"_8_Sha(2)\", name: \"8_Sha(2)\"},\n      ],\n    };\n    // console.log('accession list per gene', accessionNames)\n    this.accessionNames = accessionNames;\n\n    // add the options to the button\n    d3.select(\"#selectButtonData\")\n      .selectAll(\"myOptionsData\")\n      .data(Object.keys(geneIDs))\n      .enter()\n      .append(\"option\")\n      .text(function(d) {\n        return geneIDs[d];\n      }) // text showed in the menu\n      .attr(\"value\", function(d) {\n        return d;\n      }); // corresponding value returned by the button\n\n     \n     const accessionIDs = {\n      // _full_closest: \"none\",\n      _ref: \"none\",\n      \"_1_Col-0\": \"1_Col-0\",\n      \"_2_An-1\": \"2_An-1\",\n      \"_3_C24\":  \"3_C24\",\n      \"_4_Cvi\": \"4_Cvi\",\n      \"_5_Eri\": \"5_Eri\",\n      \"_6_Kyo\": \"6_Kyo\",\n      \"_7_Ler\": \"7_Ler\",\n      \"_8_Sha\": \"8_Sha\",\n      // \"_Altai-5\": \"Altai-5\",\n      // \"_Gro-3\": \"Gro-3\",\n      // \"_Kas-1\": \"Kas-1\",\n      // \"_Ler-0\": \"Ler-0\",\n      // \"_Sku-30\": \"Sku-30\",\n      // \"_Tsu-0\": \"Tsu-0\"\n\n    };\n    // console.log('accession ids original', accessionIDs)\n\n  \n\n    this.selectedGeneId = d3.select(\"#selectButtonData\").node().value;\n    // console.log('selected gene ID', this.selectedGeneId)\n\n    var accessionsGene = accessionNames[this.selectedGeneId];\n    // console.log('selected gene accessions', accessionsGene)\n    this.accessionsGene = accessionsGene;\n\n    let accessionButton = d3.select(\"#selectButtonAccessionData\");\n    this.accessionButton = accessionButton;\n\n    // Trees\n    var treeTypes = {\n      kmer_distance: \"k-mer distance\",\n      gene_distance: \"gene distance\",\n      ani: \"ANI\",\n      // coresnp: \"core SNP tree\",\n     \n    };\n\n    // add the options to the button\n    d3.select(\"#selectButtonTreeData\")\n      .selectAll(\"myOptionsTreeData\")\n      .data(Object.keys(treeTypes))\n      .enter()\n      .append(\"option\")\n      .text(function(d) {\n        return treeTypes[d];\n      }) // text showed in the menu\n      .attr(\"value\", function(d) {\n        return d;\n      }); // corresponding value\n\n    \n\n    this.fetchData(Object.keys(geneIDs)[0], Object.keys(accessionIDs)[0]); // inital data display\n    this.fetchDataTree(Object.keys(treeTypes)[0]);\n    \n    this.updateData();\n\n    // var accessionTest = this.loadDataAccession;\n    // console.log('accession test', accessionTest)\n  },\n  methods: {\n    updateData() {\n\n      let vis = this;\n\n      //add the options to the button\n      // var accessionButton = d3.select(\"#selectButtonAccessionData\")\n      vis.accessionButton\n        .selectAll(\"myOptionsAccessionData\")\n        .data(vis.accessionsGene) //Object.keys(accessionIDs)\n        .enter()\n        .append(\"option\")\n        .attr('class', 'myOptionsAccessionData')\n        .text(d => d.name)\n        .attr(\"value\", d => d.ref);\n        // .text(function(d) {\n        //   // return accessionIDs[d];\n        //   console.log('d in list name', d.name) //accessionsGene[d]\n        //   return d.name; //accessionsGene[d]\n        // }) // text showed in the menu\n        // .attr(\"value\", function(d) {\n        //   console.log('d in list ref', d.ref) //accessionsGene[d]\n        //   return d.ref;\n        // }); // corresponding value returned by the button\n\n      // vis.accessionButton = accessionButton;\n      // console.log(\"vis accession button inital\", this.accessionButton)\n    \n      // Change data based on select\n      d3.select(\"#selectButtonData\").on(\"change\", () => {\n        var selectedGene = d3.select(\"#selectButtonData\").node().value;\n\n        // console.log(\"TEST!!\");\n\n        var selectedAcc = vis.accessionNames[selectedGene];\n        // console.log(\"selected gene ID accessions in update: \", selectedAcc);\n\n        // check new data\n        let accessionButtonValueUpdate = vis.accessionButton\n            // .select(\"#selectButtonAccessionData\")\n            .selectAll(\".myOptionsAccessionData\")\n            // .selectAll(\".accessionOption\")\n            .data(selectedAcc); //key function?\n\n          // console.log(\"vis accession button update\", accessionButtonValueUpdate)\n\n        \n          // make new cells\n          let accessionButtonValueEnter = accessionButtonValueUpdate\n            .enter()\n            .append(\"option\")\n            .attr('class', 'myOptionsAccessionData')\n\n          // remove old cells\n          accessionButtonValueUpdate.exit().remove();\n\n          // console.log(\"vis accession button enter\", accessionButtonValueEnter)\n\n          // merge cells with existing\n          accessionButtonValueEnter\n            .merge(accessionButtonValueUpdate)\n            .text(d => d.name)\n            .attr(\"value\", d => d.ref); // corresponding value returned by the button\n          // console.log(\"vis accession button enter final\", accessionButtonValueEnter)\n\n\n        // // check new data\n        // let accessionButtonTextUpdate = vis.accessionButton\n        //     // .select(\"#selectButtonAccessionData\")\n        //     .selectAll(\".myOptionsAccessionData\")\n        //     // .selectAll(\".accessionOption\")\n        //     .data(selectedAcc); //key function?\n\n        //   console.log(\"vis accession button update\", accessionButtonTextUpdate)\n\n        \n        //   // make new cells\n        //   let accessionButtonTextEnter = accessionButtonValueUpdate\n        //     .enter()\n        //     .append(\"option\")\n        //     .attr('class', 'myOptionsAccessionData')\n\n        //   // remove old cells\n        //   accessionButtonValueUpdate.exit().remove();\n\n        //   console.log(\"vis accession button enter\", accessionButtonValueEnter)\n\n        //   // merge cells with existing\n        //   accessionButtonValueEnter\n        //     .merge(accessionButtonValueUpdate)\n        //     // .text(d => d.name)\n        //     .attr(\"value\", d => d.ref); // corresponding value returned by the button\n        //   console.log(\"vis accession button enter final\", accessionButtonValueEnter)\n        \n\n\n\n\n        var selectedAccession = d3.select(\"#selectButtonAccessionData\").node().value;\n        // console.log(\"selected Accession: \", selectedAccession);\n\n        this.fetchData(selectedGene, selectedAccession);\n      });\n\n      // Change data based on select\n      d3.select(\"#selectButtonTreeData\").on(\"change\", () => {\n        var selectedTree = d3.select(\"#selectButtonTreeData\").node().value;\n        // console.log(\"selected Tree Type: \", selectedTree);\n\n        this.fetchDataTree(selectedTree);\n      });\n      // Change data based on select\n      d3.select(\"#selectButtonAccessionData\").on(\"change\", () => {\n        var selectedGene = d3.select(\"#selectButtonData\").node().value;\n        // console.log(\"selected gene ID: \", selectedGene);\n\n        var selectedAccession = d3.select(\"#selectButtonAccessionData\").node().value;\n        // console.log(\"selected Accession: \", selectedAccession);\n\n        this.fetchData(selectedGene, selectedAccession);\n      });\n    },\n\n    async fetchDataTree(treeType) {\n      //change later to type of tree\n      // console.log(\"initial Tree =\", treeType);\n\n      const response = await fetch(\"./trees/tree_\" + treeType + \".txt\");\n      const data_tree = await response.text();\n      // console.log(data_tree);\n\n      this.loadDataTree = data_tree;\n      let componentTree = this.$refs[\"tree_data\"];\n\n      componentTree.updateVis(data_tree);\n    },\n\n    // async fetchDataAccession(geneID) {\n    //   // console.log(\"this.geneID =\", geneID);\n    //   // console.log(\"initial Accession =\", accession);    \n\n    //   let data_accession = await d3.csv(\"./gene_variants/accessions_\" + geneID + \".csv\");\n    //   this.loadDataAccession = data_accession;\n\n    //   // console.log('data accessions in App', data_accession)\n\n    // },\n\n    async fetchData(geneID, accession) {\n      // console.log(\"initial Gene =\", geneID);\n      // console.log(\"initial Accession =\", accession);    \n\n      let data_msa = await d3.csv(\"./gene_variants_newest/matrix_\" + geneID + accession + \".csv\");\n      this.loadDataMSA = data_msa;\n\n      let data_msa_mutations = await d3.csv(\n        \"./gene_variants_newest/var_count_matrix_\" + geneID + accession +\".csv\"\n      ); //  msa_AT1G01060_mutations.csv\n      this.loadDataMut = data_msa_mutations;\n\n      // let data_barcode = await d3.csv(\n      //   \"./gene_variants_newest/barcode_\" + geneID + accession + \".csv\"\n      // ); //  msa_AT1G01060_mutations.csv\n      // this.loadDataBarcode = data_barcode;\n\n      let data_phenos = await d3.csv(\n        \"./gene_variants_newest/pheno_\" + geneID +  \".csv\"\n      ); \n      this.loadDataPheno = data_phenos;\n\n      let componentVariantDetails = this.$refs[\"variant_data\"];\n\n      componentVariantDetails.updateVis(data_msa, data_msa_mutations, data_phenos);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Karla, Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 5px;\n\n  /* background: rgba(246, 246, 246, 1); */\n  /*  border-radius: 12px; */\n  padding: 5px 0 0px;\n}\n\n.sidebar-item {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.content-title {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgb(246, 247, 249);\n  text-transform: uppercase;\n  font-size: 13px;\n  text-align: left;\n  padding-left: 1%;\n  font-family: sans-serif;\n  /* font-variant: all-small-caps; */\n  font-weight: 550;\n  letter-spacing: 0.08em;\n}\n\n/* .content-title p {\n  text-transform: uppercase;\n  font-weight: 600;\n  text-align: left;\n  margin-left: 1%;\n} */\n\n.content-section {\n  background: rgba(255, 255, 255, 1);\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1);\n  /* border-radius: 2px; */\n}\n\n\n.sidebar-item {\n  text-align: left;\n\n  max-width: 100%;\n  margin: 10 auto;\n  padding: 10px 0 30px;\n  border-top: solid 1px rgba(39, 39, 39, 0.178);\n}\n\n#sidebar-menu-header {\n  border-top: 0;\n\n}\n\n#tree-comp{\n  margin-top: 30px;\n}\n\np {\n   -webkit-appearance: none;\n   -moz-appearance: none;\n   appearance: none;\n\n }\n\n</style>\n","<template>\n  <!-- <h4>Phylogenetic Tree</h4> -->\n  <div class=\"selectLabelTree\">\n    <label id=\"show-length\">\n      <input type=\"checkbox\" id=\"showBranchLength\" checked/> Show branch length\n    </label>\n  </div>\n  <div id=\"phylo\"></div>\n</template>\n\n<script>\n/* eslint-disable no-debugger */\n/* eslint-disable no-unused-vars */\nimport * as d3 from \"d3\";\nexport default {\n  name: \"TreeVis\",\n  methods: {\n    updateVis(data_tree) {\n      let vis = this;\n\n      function parseNewick(a) {\n        for (\n          var e = [], r = {}, s = a.split(/\\s*(;|\\(|\\)|,|:)\\s*/), t = 0;\n          t < s.length;\n          t++\n        ) {\n          var n = s[t];\n          switch (n) {\n            case \"(\":\n              var c = {};\n              (r.branchset = [c]), e.push(r), (r = c);\n              break;\n            case \",\":\n              var d = {};\n              e[e.length - 1].branchset.push(d), (r = d);\n              break;\n            case \")\":\n              r = e.pop();\n              break;\n            case \":\":\n              break;\n            default:\n              var h = s[t - 1];\n              // append t to r.name in line below to deal with internal nodes of tree\n              // with duplicate names. strip t from name before displaying in code below.\n              \")\" == h || \"(\" == h || \",\" == h\n                ? (r.name = n + t)\n                : \":\" == h && (r.length = parseFloat(n));\n          }\n        }\n        return r;\n      }\n\n      const data = parseNewick(data_tree);\n      // console.log(\"data tree parsed\", data);\n\n      // Create data hierarchy and sort nodes by ascending length\n      var root = d3\n        .hierarchy(data, function(d) {\n          return d.branchset;\n        })\n        .sum(function(d) {\n          return d.branchset ? 0 : 1;\n        })\n        // .sort(function(a,b) {\n        //   return a.value - b.value  || d3.ascending(a.data.length, b.data.length);\n        // });\n        .sort(function(a, b) {\n          return a.value || d3.ascending(a.data.length, b.data.length);\n        });\n      vis.root = root;\n\n      // compute max length of branches in tree\n      var leaves = root.leaves();\n      var lnghts = [];\n      var i;\n      var j;\n      for (i = 0; i < leaves.length; i++) {\n        var lts = [];\n        for (j = 0; j < leaves[i].ancestors().length; j++) {\n          lts.push(leaves[i].ancestors()[j].data.length);\n        }\n        lnghts.push(d3.sum(lts));\n      }\n\n      var maxLen = d3.max(lnghts);\n      // console.log(\"maxLength branches\", maxLen);\n\n      // Set the scale input domains\n      vis.xScale.domain([0, maxLen]);\n\n      vis.renderVis();\n    },\n    renderVis() {\n      let vis = this;\n\n      updateTreeChart(vis.cluster(vis.root).links(), vis.root.descendants());\n\n      // update axis\n      vis.xAxisGroup.call(vis.xAxis);\n\n      function updateTreeChart(dataLinks, dataNodes) {\n\n          // check new data \n        let visTreeUpdate = vis.g\n          .selectAll(\".links\")\n          .data(dataLinks);\n\n        // remove old tree\n        visTreeUpdate.exit().remove();\n\n        // append data to links\n        let visTreeEnter = visTreeUpdate\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", \"links\");\n      \n        // merge data \n        visTreeEnter\n          .merge(visTreeUpdate)\n          .transition()\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \"#ccc\")\n          .attr(\"d\", d => horizontalStraightBranchLengths(d));\n\n        // check new node data \n        let visTreeNodesUpdate = vis.g\n          .selectAll(\".nodes\")\n          .data(dataNodes);\n\n        // remove old nodes\n        visTreeNodesUpdate.exit().remove();\n\n        // append data to links\n        let visTreeNodesEnter = visTreeNodesUpdate\n          .enter()\n          .append(\"circle\")\n          .attr(\"class\", \"nodes\");\n\n          visTreeNodesEnter\n          .merge(visTreeNodesUpdate)\n          .transition()\n          .attr(\"fill\", (d) => (d.children ? \"none\" : \"#999\"))\n          .attr(\"r\", 2)\n          .attr(\"transform\", d =>\n            // console.log(\"d.rootdist x xScale\", xScale(d.rootDist));\n            \"translate(\" + vis.xScale(d.rootDist) + \",\" + d.x + \")\" // to have label closer to branch\n            //  \"translate(\" + d.y + \",\" + d.x + \")\"\n          );\n\n        // check new node data \n        let visTreeLabelsUpdate = vis.g\n          .selectAll(\".node-labels\")\n          .data(dataNodes);\n\n        // remove old nodes\n        visTreeLabelsUpdate.exit().remove();\n\n        // append data to links\n        let visTreeLabelsEnter = visTreeLabelsUpdate\n          .enter()\n          .append(\"text\")\n          .attr(\"class\", \"node-labels\");\n\n          visTreeLabelsEnter\n          .merge(visTreeLabelsUpdate)\n          .transition()\n          .attr(\"fill\", (d) => (d.children ? \"none\" : \"#2c3e50\"))\n          .attr(\"font-size\", \"10px\")\n          .attr(\"transform\", d =>\n            // console.log(\"d.rootdist x xScale\", xScale(d.rootDist));\n            \"translate(\" + (vis.xScale(d.rootDist) + 5) + \",\" + ( d.x + 2) + \")\" // to have label closer to branch\n            //  \"translate(\" + (d.y + 5) + \",\" +  ( d.x + 2) + \")\"\n          )\n          .text(d => {\n            if (d.data.name.length < 7) {\n                return d.data.name.slice(0, -1); //+ \" (\" + d.data.length + \")\";}\n              } else {\n                return d.data.name.slice(0, -2); //+ \" (\" + d.data.length + \")\";\n              }\n            })\n          .style(\"text-anchor\", \"start\")\n\n      }\n\n      function updateDendrogramChart(dataLinks, dataNodes) {\n\n        // check new data \n        let visTreeUpdate = vis.g\n        .selectAll(\".links\")\n        .data(dataLinks);\n\n        // remove old tree\n        visTreeUpdate.exit().remove();\n\n        // append data to links\n        let visTreeEnter = visTreeUpdate\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"links\");\n\n        // merge data \n        visTreeEnter\n        .merge(visTreeUpdate)\n        .transition()\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#ccc\")\n        .attr(\"d\", d => horizontalStraightDendrogram(d));\n\n        // check new node data \n        let visTreeNodesUpdate = vis.g\n        .selectAll(\".nodes\")\n        .data(dataNodes);\n\n        // remove old nodes\n        visTreeNodesUpdate.exit().remove();\n\n        // append data to links\n        let visTreeNodesEnter = visTreeNodesUpdate\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"nodes\");\n\n        visTreeNodesEnter\n        .merge(visTreeNodesUpdate)\n        .transition()\n        .attr(\"fill\", (d) => (d.children ? \"none\" : \"#999\"))\n        .attr(\"r\", 2)\n        .attr(\"transform\", d =>\n          // console.log(\"d.rootdist x xScale\", xScale(d.rootDist));\n          // \"translate(\" + vis.xScale(d.rootDist) + \",\" + d.x + \")\" // to have label closer to branch\n           \"translate(\" + d.y + \",\" + d.x + \")\"\n        );\n\n        // check new node data \n        let visTreeLabelsUpdate = vis.g\n        .selectAll(\".node-labels\")\n        .data(dataNodes);\n\n        // remove old nodes\n        visTreeLabelsUpdate.exit().remove();\n\n        // append data to links\n        let visTreeLabelsEnter = visTreeLabelsUpdate\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"node-labels\");\n\n        visTreeLabelsEnter\n        .merge(visTreeLabelsUpdate)\n        .transition()\n        .attr(\"fill\", (d) => (d.children ? \"none\" : \"#2c3e50\"))\n        .attr(\"font-size\", \"10px\")\n        .attr(\"transform\", d =>\n          // console.log(\"d.rootdist x xScale\", xScale(d.rootDist));\n          // \"translate(\" + (vis.xScale(d.rootDist) + 5) + \",\" + ( d.x + 2) + \")\" // to have label closer to branch\n           \"translate(\" + (d.y + 5) + \",\" +  ( d.x + 2) + \")\"\n        )\n        .text(d => {\n          if (d.data.name.length < 7) {\n              return d.data.name.slice(0, -1); //+ \" (\" + d.data.length + \")\";}\n            } else {\n              return d.data.name.slice(0, -2); //+ \" (\" + d.data.length + \")\";\n            }\n          })\n        // .style(\"text-anchor\", \"start\")\n\n        }\n\n      // Show branch length option\n      d3.select(\"#showBranchLength\").on(\"change\", function() {\n        if (d3.select(\"#showBranchLength\").property(\"checked\")) {\n          // console.log(\"selected branch length option: \", \"checked\");\n          updateTreeChart(vis.cluster(vis.root).links(), vis.root.descendants());\n          d3.select(\"#x-axis--tree\").style(\"opacity\", \"1\");\n\n  \n        } else {\n          // console.log(\"selected branch length option: \", \"unchecked\");\n          updateDendrogramChart(vis.cluster(vis.root).links(), vis.root.descendants());\n          // vis.xAxisGroup.select(\".axis x-axis\").remove(); // to disable rendering the axis line\n          d3.select(\"#x-axis--tree\").style(\"opacity\", \"0\");\n\n\n\n        \n        }\n      });\n\n      function horizontalStraightBranchLengths(d) {\n        var array = [d.source, d.target];\n\n        let line = d3\n          .line()\n          .x(function(array) {\n            array.rootDist =\n              (array.parent ? array.parent.rootDist : 0) +\n              (array.data.length || 0);\n            // console.log(\"array rootdist\", array.data.name, array.rootDist, xScale(array.rootDist))\n            return vis.xScale(array.rootDist); //change width to scale\n            // return array.y; //dendrogram style\n          })\n          .y(function(array) {\n            return array.x; // inverted x/y as you have a horizontal tree\n          })\n          .curve(d3.curveStepBefore);\n\n        return line(array);\n      }\n\n      function horizontalStraightDendrogram(d) {\n        var array = [d.source, d.target];\n\n        let line = d3\n          .line()\n          .x(function(array) {\n            array.rootDist =\n              (array.parent ? array.parent.rootDist : 0) +\n              (array.data.length || 0);\n            // console.log(\"array rootdist\", array.data.name, array.rootDist, xScale(array.rootDist))\n            // return visX(array.rootDist); //change width to scale\n            return array.y; //dendrogram style\n          })\n          .y(function(array) {\n            return array.x; // inverted x/y as you have a horizontal tree\n          })\n          .curve(d3.curveStepBefore);\n\n        return line(array);\n      }\n    },\n  },\n  mounted() {\n    let vis = this;\n    //set the dimensions and margins of the graph\n    const margin = { top: 15, right: 45, bottom: 15, left: 30 }; //compute max label length for margin right\n    const width =\n        d3.select(\"#phylo\").node().clientWidth - margin.left - margin.right,\n      height = 250 - margin.top - margin.bottom;\n    vis.margin = margin;\n    vis.width = width;\n    vis.height = height;\n\n    // Chart svg container\n    var svg = d3\n      .select(\"#phylo\")\n      .append(\"svg\")\n      .attr(\"class\", \"chart\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n    vis.svg = svg;\n\n    var g = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n    vis.g = g;\n\n    // Cluster\n    var cluster = d3.cluster().size([height, width]);\n    vis.cluster = cluster;\n\n    // Initialize scale\n    let xScale = d3\n      .scaleLinear()\n      // .domain([0, maxLen])\n      .range([0, width]);\n    vis.xScale = xScale;\n\n    // Initialize axes\n    var xAxis = d3\n      .axisTop(vis.xScale)\n      .ticks(3)\n      .tickSizeOuter(0)\n      .tickSizeInner(-vis.height); //change 6 for more ticks\n\n    vis.xAxis = xAxis;\n\n    var xAxisGroup = vis.svg\n      .append(\"g\")\n      .attr(\"class\", \"axis x-axis\")\n      .attr(\"id\", \"x-axis--tree\")\n      .attr(\n        \"transform\",\n        `translate(${vis.margin.left}, ${vis.margin.top + 10})`\n      );\n    vis.xAxisGroup = xAxisGroup;\n\n    // function dist2(a, b) {\n    //   return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2;\n    // }\n    // g.on(\"mousemove\", function() {\n    //   const m = d3.pointer(event);\n    //   const leaf = node.data()[\n    //     d3.scan(node.data().map((d) => dist2([d.y, d.x], m)))\n    //   ];\n    //   let d = root\n    //     .links()\n    //     .filter((d) => d.target === leaf)\n    //     .pop().target;\n    //   const path = [];\n    //   do {\n    //     path.push(d.data);\n    //   } while ((d = d.parent));\n    //   // [fix] highlight subpath?\n    //   node.classed(\"highlight\", (d) => path.indexOf(d.data) > -1);\n    //   node.classed(\"leaf\", (d) => path.indexOf(d.data) === 0);\n    //   link.classed(\"highlight\", (d) => path.indexOf(d.target.data) > -1);\n    //   svg.node().value = path;\n    //   svg.node().dispatchEvent(new CustomEvent(\"input\"));\n    // });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.selectLabelTree {\n  display: inline;\n  float: left;\n  margin-left: 0.5rem;\n  margin-top: 0.5rem;\n  /* font-weight: 700; */\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: grey;\n  shape-rendering: crispEdges;\n}\n\n.axis .tick line {\n  fill: none;\n  stroke: lightgrey;\n  stroke-dasharray: 5, 10;\n  opacity: 0.7;\n  shape-rendering: crispEdges;\n}\n\n.labels {\n  font-size: 10px;\n  font-family: sans-serif;\n  fill: #2c3e50;\n}\n\n/* .label--active {\n  font-weight: bold;\n  font-size: 9px;\n}\n\n.link--active {\n  stroke: #007bff !important;\n  stroke-width: 2.5px;\n  shape-rendering: crispEdges;\n} */\n\n.links {\n  fill: none;\n  stroke: black;\n  stroke-width: 2px;\n  /* shape-rendering: crispEdges; */\n}\n\n.highlight circle {\n  fill: lightblue;\n}\n.highlight circle {\n  fill: lightblue;\n}\n.highlight text {\n  fill: lightblue;\n}\n.leaf circle {\n  fill: blue;\n}\n.leaf circle {\n  fill: blue;\n}\n.leaf text {\n  fill: blue;\n}\n.leaf rect {\n  stroke: blue;\n}\npath.highlight {\n  stroke: lightblue;\n  shape-rendering: crispEdges;\n}\n</style>\n","import { render } from \"./TreeVis.vue?vue&type=template&id=2e93dfa7\"\nimport script from \"./TreeVis.vue?vue&type=script&lang=js\"\nexport * from \"./TreeVis.vue?vue&type=script&lang=js\"\n\nimport \"./TreeVis.vue?vue&type=style&index=0&id=2e93dfa7&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"selectLabelVariants\">\n    <!-- <label for=\"selectButtonGene\"> Select Gene: </label>\n    <select class=\"selectButtonVariants\" id=\"selectButtonGene\"\n      ><option value=\"\" selected disabled hidden>gene ID</option></select\n    > -->\n    <img\n      src=\"./buttons/sort-down.svg\"\n      alt=\"\"\n      width=\"20\"\n      height=\"20\"\n      title=\"Sort\"\n    />\n    <!-- <label for=\"selectButtonSort\"> select order </label> -->\n    <select class=\"selectButtonVariants\" id=\"selectButtonSort\"></select>\n    <label for=\"selectButtonBrush\"> Size Brush: </label>\n    <select class=\"selectButtonVariants\" id=\"selectButtonBrush\">\n      <!-- <option value=\"2814\" selected>200 positions</option> -->\n    </select>\n    \n    <img\n    src=\"./buttons/sort-down.svg\"\n    alt=\"\"\n    width=\"20\"\n    height=\"20\"\n    title=\"Sort\"\n    id=\"sort_group\"\n  />\n  <!-- <label for=\"selectButtonSort\"> select order </label> -->\n  <select class=\"selectButtonVariants\" id=\"selectButtonSortPhenos\"></select>\n  </div>\n  <div class=\"container\">\n    <div id=\"chart\"></div>\n    <div class=\"row\" id=\"header-arrows\">\n      <div class=\"col\" id=\"footer-col-right\">\n        <div class=\"float-start border rounded\" id=\"btn-arrow-left\">\n          <button type=\"button\" class=\"btn btn-link btn-sm\" id=\"arrow-left\">\n            <img\n              src=\"./buttons/arrow-left.svg\"\n              alt=\"\"\n              width=\"12\"\n              height=\"12\"\n              title=\"arrow-left\"\n            />\n          </button>\n        </div>\n      </div>\n      <div class=\"col\" id=\"footer-col-left\">\n        <div class=\"float-end border rounded\" id=\"btn-arrow-right\">\n          <button type=\"button\" class=\"btn btn-link btn-sm\" id=\"arrow-right\">\n            <img\n              src=\"./buttons/arrow-right.svg\"\n              alt=\"\"\n              width=\"12\"\n              height=\"12\"\n              title=\"arrow-right\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div id=\"tooltipBarcode\"></div>\n  <div id=\"tooltip\"></div>\n  <div id=\"tooltip-bars\"></div>\n  <div id=\"tooltip-bars--pheno\"></div>\n  <div id=\"tooltip-pheno\"></div>\n  <div id=\"tooltip-bars--pheno2\"></div>\n</template>\n\n<script>\n/* eslint-disable no-debugger */\n/* eslint-disable no-unused-vars */\nimport * as d3 from \"d3\";\nexport default {\n  name: \"GeneVariantVis\",\n  methods: {\n    // This function contains all the code to prepare the data before we render it.\n    updateVis(data, data_mutations, data_phenos) {\n\n      // console.log('data', data)\n      // console.log('data mutations', data_mutations)\n      // console.log('data phenos', data_phenos)\n\n   \n      let vis = this;\n\n      const data_pheno_dtf3 = data_phenos.filter(item => (item.pheno == 'DTF3')); \n      const data_pheno_dtf1 = data_phenos.filter(item => (item.pheno == 'DTF1')); \n      const data_pheno_origin = data_phenos.filter(item => (item.pheno == 'Origin')); \n      const data_pheno_group = data_phenos.filter(item => (item.pheno == 'Group')); \n\n\n      vis.data_pheno_dtf3 = data_pheno_dtf3;\n      vis.data_pheno_dtf1 = data_pheno_dtf1;\n\n\n      // // console.log('data barcode', data_barcode)\n      // const flat_data_barcode = {\n      //   pos: data_barcode.map((d) => String(d.pos)),\n      //   base: data_barcode.map((d) => d.base),\n      //   accession: data_barcode.map((d) => d.accession),\n      // };\n      // // console.log(\"flat data barcode\", flat_data_barcode);\n      // vis.flat_data_barcode = flat_data_barcode;\n\n      // if (vis.globalBrushStart == undefined){\n      //   console.log(\" global brush values undefined\")\n      // }\n\n      // console.log('global brush start value from UpdateVis', vis.globalBrushStart)\n      // console.log('global brush end value from UpdateVis', vis.globalBrushEnd)\n\n\n      // helper functions\n      const unique = (value, index, self) => {\n        return self.indexOf(value) === index;\n      };\n      vis.unique = unique;\n\n      function filter(values, test) {\n        const I = [],\n          n = values.length;\n        for (let i = 0; i < n; ++i) {\n          if (test(values[i], i, values)) {\n            I.push(i);\n          }\n        }\n        return I;\n      }\n      vis.filter = filter;\n\n      function taker(index) {\n        return (values) => values.constructor.from(index, (i) => values[i]);\n      }\n      vis.taker = taker;\n\n      // data preprocessing\n      vis.data_mutations = data_mutations;\n      // console.log(\"data context vis:\", data_mutations);\n      // console.log(\"data focus vis: \", data);\n\n      const flat_data = {\n        pos: data.map((d) => parseFloat(d.pos)),\n        base: data.map((d) => d.base),\n        base_hover: data.map((d) => d.base_hover),\n        accession: data.map((d) => d.accession),\n      };\n      // console.log(\"flat data\", flat_data);\n      vis.flat_data = flat_data;\n\n      const nr_accessions = [...new Set(flat_data.accession)].length;\n      // console.log(\"nr accessions\", nr_accessions);\n      vis.nr_accessions = nr_accessions;\n\n      const length_gene = data.length / nr_accessions - 1;\n      vis.length_gene = length_gene;\n      // console.log(\"length gene\", length_gene);\n\n      const mutations = data_mutations.map((d) => parseFloat(d.accession));\n      const max_mutations = d3.max(mutations) + 5;\n      vis.max_mutations = max_mutations;\n      // console.log(\"max mutations\", mutations, max_mutations);\n\n\n      // else {\n        var start = vis.globalBrushStart;\n\n        var end = vis.globalBrushEnd\n\n      // }\n      if (vis.globalBrushStart > length_gene || vis.globalBrushEnd > length_gene){\n        // console.log(\"start exceeds length new gene!!\")\n        // start = length_gene - 50\n        // end = length_gene\n        start = 0\n        end = 50\n\n      }\n\n      // if (vis.globalBrushEnd > length_gene){\n      //   console.log(\"end exceeds length new gene!!\")\n      //   // // start = length_gene - 50\n      //   end = length_gene\n\n      // }\n\n      vis.start = start;\n      vis.end = end;\n \n      const updateBrush = d3.select(\"#selectButtonBrush\").node().value;\n      // console.log('update brush with new data', updateBrush)\n      // const end = updateBrush * 100; // when new data loaded keep brush size\n    \n      const updateSort = d3.select(\"#selectButtonSort\").node().value; // when new data loaded keep sorting order\n\n      var flat_data_slice = [\n        flat_data.pos,\n        flat_data.base,\n        flat_data.base_hover,\n        flat_data.accession,\n      ].map(taker(filter(flat_data.pos, (d) => d >= start && d <= end)));\n\n      var flat_data_slice_default = {\n        pos: flat_data_slice[0],\n        base: flat_data_slice[1],\n        base_hover: flat_data_slice[2],\n        accession: flat_data_slice[3],\n      };\n      // console.log(\"flat data slice\", flat_data_slice_default);\n\n\n      var genePositions = flat_data_slice_default.pos.filter(unique);\n      // console.log(\"genePositions\", genePositions);\n\n      // var barcodePositions = flat_data_barcode.pos.filter(unique);\n      // console.log(\"barcodePositions\", barcodePositions);\n\n      const geneAccessions = flat_data_slice_default.accession.filter(unique);\n      // console.log(\"gene accessions\", geneAccessions);\n      vis.geneAccessions = geneAccessions;\n\n      // var alpha = [\n      //   \"8__Tsu-0\",\n      //   \"8__Kas-1\",\n      //   \"8__Altai-5\",\n      //   \"8_Sha\",\n      //   \"7__Sku-30\",\n      //   \"7__Ler-0\",\n      //   \"7__Gro-3\",\n      //   \"7_Ler\",\n      //   \"6__Tsu-0\",\n      //   \"6__Kas-1\",\n      //   \"6__Altai-5\",\n      //   \"6_Kyo\",\n      //   \"5__Sku-30\",\n      //   \"5__Ler-0\",\n      //   \"5__Gro-3\",\n      //   \"5_Eri\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"2_An-1\",\n      //   \"1__Tsu-0\",\n      //   \"1__Sku-30\",\n      //   \"1__Ler-0\",\n      //   \"1__Kas-1\",\n      //   \"1__Gro-3\",\n      //   \"1__Altai-5\",\n      //   \"1_Col-0\",\n      // ];\n      // var alpha = [\n      //   \"8_Sha\",\n      //   \"7_Ler\",\n      //   \"6_Kyo\",\n      //   \"5_Eri\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"2_An-1\",\n      //   \"Tsu-0\",\n      //   \"Sku-30\",\n      //   \"Ler-0\",\n      //   \"Kas-1\",\n      //   \"Gro-3\",\n      //   \"Altai-5\",\n      //   \"1_Col-0\",\n      // ];\n\n      // var phylo_kmer = [\n      //   \"Tsu-0\",\n      //   \"Sku-30\",\n      //   \"Ler-0\",\n      //   \"Kas-1\",\n      //   \"Gro-3\",\n      //   \"Altai-5\",\n      //   \"2_An-1\",\n      //   \"1_Col-0\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"8_Sha\",\n      //   \"7_Ler\",\n      //   \"5_Eri\",\n      //   \"6_Kyo\",\n      // ];\n      // var phylo_kmer = [\n      //   \"2_An-1\",\n      //   \"1__Tsu-0\",\n      //   \"1__Sku-30\",\n      //   \"1__Ler-0\",\n      //   \"1__Kas-1\",\n      //   \"1__Gro-3\",\n      //   \"1__Altai-5\",\n      //   \"1_Col-0\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"8__Tsu-0\",\n      //   \"8__Kas-1\",\n      //   \"8__Altai-5\",\n      //   \"8_Sha\",\n      //   \"7__Sku-30\",\n      //   \"7__Ler-0\",\n      //   \"7__Gro-3\",\n      //   \"7_Ler\",\n      //   \"5__Sku-30\",\n      //   \"5__Ler-0\",\n      //   \"5__Gro-3\",\n      //   \"5_Eri\",\n      //   \"6__Tsu-0\",\n      //   \"6__Kas-1\",\n      //   \"6__Altai-5\",\n      //   \"6_Kyo\",\n      // ];\n\n      // var ref_first = [\n      //   \"Gro-3\",\n      //   \"Ler-0\",\n      //   \"Sku-30\",\n      //   \"Altai-5\",\n      //   \"Kas-1\",\n      //   \"Tsu-0\",\n      //   \"8_Sha\",\n      //   \"7_Ler\",\n      //   \"6_Kyo\",\n      //   \"5_Eri\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"2_An-1\",\n      //   \"1_Col-0\",\n      // ];\n\n      // var original_map = [\n      //   \"Tsu-0\",\n      //   \"Kas-1\",\n      //   \"Altai-5\",\n      //   \"8_Sha\",\n      //   \"7_Ler\",\n      //   \"6_Kyo\",\n      //   \"Sku-30\",\n      //   \"Ler-0\",\n      //   \"Gro-3\",\n      //   \"5_Eri\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"2_An-1\",\n      //   \"1_Col-0\",\n      // ];\n\n      // var original_map = [\n      //   \"8__Kas-1\",\n      //   \"8__Altai-5\",\n      //   \"8_Sha\",\n      //   \"7_Ler\",\n      //   \"6__Tsu-0\",\n      //   \"6_Kyo\",\n      //   \"5__Sku-30\",\n      //   \"5__Ler-0\",\n      //   \"5__Gro-3\",\n      //   \"5_Eri\",\n      //   \"4_Cvi\",\n      //   \"3_C24\",\n      //   \"2_An-1\",\n      //   \"1_Col-0\",\n      // ];\n\n      // var group = [\n      //   \"1_Col-0\",\n      //   \"2_An-1\",\n      //   \"4_Cvi\",\n      //   \"Altai-5\",\n      //   \"Sku-30\",\n      //   \"Ler-0\",\n      //   \"3_C24\",\n      //   \"5_Eri\",\n      //   \"6_Kyo\",\n      //   \"7_Ler\",\n      //   \"8_Sha\",\n      //   \"Tsu-0\",\n      //   \"Kas-1\",\n      //   \"Gro-3\",\n      // ];\n\n      // var origin = [\n      //   \"1_Col-0\",\n      //   \"8_Sha\",\n      //   \"Sku-30\",\n      //   \"Gro-3\",\n      //   \"5_Eri\",\n      //   \"3_C24\",\n      //   \"Tsu-0\",\n      //   \"6_Kyo\",\n      //   \"Kas-1\",\n      //   \"Ler-0\",\n      //   \"7_Ler\",\n      //   \"Altai-5\",\n      //   \"4_Cvi\",\n      //   \"2_An-1\",\n      // ];\n\n      var original_map = data_pheno_group.sort((b, a) => a.accession.localeCompare(b.accession)).map(value => value.accession);\n      var group = data_pheno_group.sort((b, a) => a.value.localeCompare(b.value)).map(value => value.accession);\n      var origin = data_pheno_origin.sort((b, a) => a.value.localeCompare(b.value)).map(value => value.accession);\n      var dtf3 = data_pheno_dtf3.sort((a,b) =>  a.value - b.value).map(value => value.accession);\n      var dtf1 = data_pheno_dtf1.sort((a,b) =>  a.value - b.value).map(value => value.accession);\n\n      // var dtf3 = [\n      //   \"Tsu-0\",\n      //   \"1_Col-0\",\n      //   \"Ler-0\",\n      //   \"7_Ler\", \n      //   \"3_C24\",\n      //   \"5_Eri\",\n      //   \"6_Kyo\",\n      //   \"2_An-1\",\n      //   \"4_Cvi\",\n      //   \"8_Sha\",\n      //   \"Altai-5\",\n      //   \"Gro-3\",\n      //   \"Kas-1\",\n      //   \"Sku-30\",\n      // ];\n\n      // var dtf1 = [\n      //   \"Tsu-0\",\n      //   \"1_Col-0\",\n      //   \"7_Ler\", \n      //   \"Ler-0\",\n      //   \"3_C24\",\n      //   \"6_Kyo\",\n      //   \"2_An-1\",\n      //   \"4_Cvi\",\n      //   \"Kas-1\",\n      //   \"8_Sha\",\n      //   \"Altai-5\",\n      //   \"5_Eri\",\n      //   \"Sku-30\",\n      //   \"Gro-3\",\n      // ];\n\n\n      // var ref_first = [\n      //   \"8__Tsu-0\",\n      //   \"8__Altai-5\",\n      //   \"8__Kas-1\",\n      //   \"5__Gro-3\",\n      //   \"5__Ler-0\",\n      //   \"5__Sku-30\",\n      //   \"6__Altai-5\",\n      //   \"6__Kas-1\",\n      //   \"6__Tsu-0\",\n      //   \"7__Sku-30\",\n      //   \"7__Gro-3\",\n      //   \"7__Ler-0\",\n      //   \"1__Gro-3\",\n      //   \"1__Ler-0\",\n      //   \"1__Sku-30\",\n      //   \"1__Altai-5\",\n      //   \"1__Kas-1\",\n      //   \"1__Tsu-0\",\n      //   \"2_An-1\",\n      //   \"8_Sha\",\n      //   \"5_Eri\",\n      //   \"6_Kyo\",\n      //   \"3_C24\",\n      //   \"7_Ler\",\n      //   \"4_Cvi\",\n      //   \"1_Col-0\",\n      // ];\n\n      var sortingOptions = {\n        original_map: original_map,\n        dtf1: dtf1,\n        dtf1_rev: dtf1.slice().reverse(),\n        dtf3: dtf3,\n        dtf3_rev: dtf3.slice().reverse(),\n        group: group,\n        group_rev: group.slice().reverse(),\n        origin: origin,\n        origin_rev: origin.slice().reverse(),\n        // ref_first: ref_first,\n        // ref_last: ref_first.slice().reverse(),\n        // // alpha_asc: alpha,\n        // // alpha_desc: alpha.slice().reverse(),\n        // phylo: phylo_kmer,\n        // phylo_rev: phylo_kmer.slice().reverse(),\n      };\n      vis.sortingOptions = sortingOptions;\n\n      var sortingOptionsPheno = {\n        original_map: original_map,\n        dtf1: dtf1,\n        dtf1_rev: dtf1.slice().reverse(),\n        dtf3: dtf3,\n        dtf3_rev: dtf3.slice().reverse(),\n        group: group,\n        group_rev: group.slice().reverse(),\n        origin: origin,\n        origin_rev: origin.slice().reverse(),\n        // ref_first: ref_first,\n        // ref_last: ref_first.slice().reverse(),\n        // phylo: phylo_kmer,\n        // phylo_rev: phylo_kmer.slice().reverse(),\n      };\n      vis.sortingOptionsPheno = sortingOptionsPheno;\n\n      // Set the scale input domains\n      vis.xScaleContext.domain([0, vis.length_gene]);\n      vis.yScaleContext.domain([0, vis.max_mutations]); // 11 is max vars on one pos\n      // vis.xScaleBarcode.domain(barcodePositions);\n      vis.yScaleBarcode.domain(sortingOptions[updateSort]);\n\n      vis.xScaleFocus.domain(genePositions);\n      vis.yScaleFocus.domain(sortingOptions[updateSort]);\n      vis.xScalePhenos.domain(['Group','Origin','DTF1','DTF3',]);\n      vis.yScalePhenos.domain(sortingOptions[updateSort]);\n      vis.xScalePhenoBars.domain([0, 115.33]);\n      vis.yScalePhenoBars.domain(sortingOptions[updateSort]);\n      vis.xScalePhenoBars2.domain([0, 137]);\n      vis.yScalePhenoBars2.domain(sortingOptions[updateSort]);\n\n      var length = (end - start + 1) * nr_accessions; //nr of cells to render\n\n      var rows_data_slice_default = Array.from({ length }, (_, i) => ({\n        pos: flat_data_slice_default.pos[i],\n        base: flat_data_slice_default.base[i],\n        base_hover: flat_data_slice_default.base_hover[i],\n        accession: flat_data_slice_default.accession[i],\n      }));\n      // console.log(\"rows_data_slice_default\", rows_data_slice_default);\n      vis.rows_data_slice_default = rows_data_slice_default;\n\n      // var data_pheno_bars = [\n      // {\"accession\": \"8_Sha\", \"pheno\": \"DTF3\", \"value\":58.5},\n      //   {\"accession\": \"7_Ler\", \"pheno\": \"DTF3\", \"value\": 40},\n      //   {\"accession\": \"6_Kyo\", \"pheno\": \"DTF3\", \"value\": 49.75},\n      //   {\"accession\": \"5_Eri\", \"pheno\": \"DTF3\", \"value\": 42.75},\n      //   {\"accession\": \"4_Cvi\",  \"pheno\": \"DTF3\", \"value\": 56},\n      //   {\"accession\": \"3_C24\", \"pheno\": \"DTF3\", \"value\": 42.5},\n      //   {\"accession\": \"2_An-1\", \"pheno\": \"DTF3\", \"value\": 54.25},\n      //   {\"accession\": \"Tsu-0\", \"pheno\": \"DTF3\", \"value\": 28},\n      //   {\"accession\": \"Sku-30\", \"pheno\": \"DTF3\", \"value\": 115.33},\n      //   {\"accession\": \"Ler-0\",  \"pheno\": \"DTF3\", \"value\": 40},\n      //   {\"accession\": \"Kas-1\",  \"pheno\": \"DTF3\", \"value\":80},\n      //   {\"accession\": \"Gro-3\",  \"pheno\": \"DTF3\", \"value\":78},\n      //   {\"accession\": \"Altai-5\",  \"pheno\": \"DTF3\", \"value\":73},\n      //   {\"accession\": \"1_Col-0\",  \"pheno\": \"DTF3\", \"value\":38},\n      // ];\n\n\n       // var data_pheno_bars_2 = [\n\n      //   {\"accession\": \"8_Sha\", \"pheno\": \"DTF1\", \"value\":72},\n      //   {\"accession\": \"7_Ler\", \"pheno\": \"DTF1\", \"value\": 28.5},\n      //   {\"accession\": \"6_Kyo\", \"pheno\": \"DTF1\", \"value\": 40},\n      //   {\"accession\": \"5_Eri\", \"pheno\": \"DTF1\", \"value\": 85},\n      //   {\"accession\": \"4_Cvi\",  \"pheno\": \"DTF1\", \"value\": 61},\n      //   {\"accession\": \"3_C24\", \"pheno\": \"DTF1\", \"value\": 32.667},\n      //   {\"accession\": \"2_An-1\", \"pheno\": \"DTF1\", \"value\": 42},\n      //   {\"accession\": \"Tsu-0\", \"pheno\": \"DTF1\", \"value\": 28},\n      //   {\"accession\": \"Sku-30\", \"pheno\": \"DTF1\", \"value\": 102.33},\n      //   {\"accession\": \"Ler-0\",  \"pheno\": \"DTF1\", \"value\": 29},\n      //   {\"accession\": \"Kas-1\",  \"pheno\": \"DTF1\", \"value\":69},\n      //   {\"accession\": \"Gro-3\",  \"pheno\": \"DTF1\", \"value\":137},\n      //   {\"accession\": \"Altai-5\",  \"pheno\": \"DTF1\", \"value\":73},\n      //   {\"accession\": \"1_Col-0\",  \"pheno\": \"DTF1\", \"value\":28},\n\n      // ];\n\n\n      // var data_pheno = [\n      //   {\"accession\": \"8_Sha\", \"pheno\": \"DTF1\", \"value\":72},\n      //   {\"accession\": \"7_Ler\", \"pheno\": \"DTF1\", \"value\": 28.5},\n      //   {\"accession\": \"6_Kyo\", \"pheno\": \"DTF1\", \"value\": 40},\n      //   {\"accession\": \"5_Eri\", \"pheno\": \"DTF1\", \"value\": 85},\n      //   {\"accession\": \"4_Cvi\",  \"pheno\": \"DTF1\", \"value\": 61},\n      //   {\"accession\": \"3_C24\", \"pheno\": \"DTF1\", \"value\": 32.667},\n      //   {\"accession\": \"2_An-1\", \"pheno\": \"DTF1\", \"value\": 42},\n      //   {\"accession\": \"Tsu-0\", \"pheno\": \"DTF1\", \"value\": 28},\n      //   {\"accession\": \"Sku-30\", \"pheno\": \"DTF1\", \"value\": 102.33},\n      //   {\"accession\": \"Ler-0\",  \"pheno\": \"DTF1\", \"value\": 29},\n      //   {\"accession\": \"Kas-1\",  \"pheno\": \"DTF1\", \"value\":69},\n      //   {\"accession\": \"Gro-3\",  \"pheno\": \"DTF1\", \"value\":137},\n      //   {\"accession\": \"Altai-5\",  \"pheno\": \"DTF1\", \"value\":73},\n      //   {\"accession\": \"1_Col-0\",  \"pheno\": \"DTF1\", \"value\":28},\n\n      //   {\"accession\": \"8_Sha\", \"pheno\": \"DTF3\", \"value\":58.5},\n      //   {\"accession\": \"7_Ler\", \"pheno\": \"DTF3\", \"value\": 40},\n      //   {\"accession\": \"6_Kyo\", \"pheno\": \"DTF3\", \"value\": 49.75},\n      //   {\"accession\": \"5_Eri\", \"pheno\": \"DTF3\", \"value\": 42.75},\n      //   {\"accession\": \"4_Cvi\",  \"pheno\": \"DTF3\", \"value\": 56},\n      //   {\"accession\": \"3_C24\", \"pheno\": \"DTF3\", \"value\": 42.5},\n      //   {\"accession\": \"2_An-1\", \"pheno\": \"DTF3\", \"value\": 54.25},\n      //   {\"accession\": \"Tsu-0\", \"pheno\": \"DTF3\", \"value\": 28},\n      //   {\"accession\": \"Sku-30\", \"pheno\": \"DTF3\", \"value\": 115.33},\n      //   {\"accession\": \"Ler-0\",  \"pheno\": \"DTF3\", \"value\": 40},\n      //   {\"accession\": \"Kas-1\",  \"pheno\": \"DTF3\", \"value\":80},\n      //   {\"accession\": \"Gro-3\",  \"pheno\": \"DTF3\", \"value\":78},\n      //   {\"accession\": \"Altai-5\",  \"pheno\": \"DTF3\", \"value\":73},\n      //   {\"accession\": \"1_Col-0\",  \"pheno\": \"DTF3\", \"value\":38},\n\n      //   {\"accession\": \"8_Sha\", \"pheno\": \"Group\", \"value\":'X'},\n      //   {\"accession\": \"7_Ler\", \"pheno\": \"Group\", \"value\": 'X'},\n      //   {\"accession\": \"6_Kyo\", \"pheno\": \"Group\", \"value\": 'X'},\n      //   {\"accession\": \"5_Eri\", \"pheno\": \"Group\", \"value\": 'X'},\n      //   {\"accession\": \"4_Cvi\",  \"pheno\": \"Group\", \"value\": 'Y'},\n      //   {\"accession\": \"3_C24\", \"pheno\": \"Group\", \"value\": 'X'},\n      //   {\"accession\": \"2_An-1\", \"pheno\": \"Group\", \"value\": 'Y'},\n      //   {\"accession\": \"Tsu-0\", \"pheno\": \"Group\", \"value\": 'X'},\n      //   {\"accession\": \"Sku-30\", \"pheno\": \"Group\", \"value\": 'Y'},\n      //   {\"accession\": \"Ler-0\",  \"pheno\": \"Group\", \"value\": 'Y'},\n      //   {\"accession\": \"Kas-1\",  \"pheno\": \"Group\", \"value\":'X'},\n      //   {\"accession\": \"Gro-3\",  \"pheno\": \"Group\", \"value\":'X'},\n      //   {\"accession\": \"Altai-5\",  \"pheno\": \"Group\", \"value\":'Y'},\n      //   {\"accession\": \"1_Col-0\",  \"pheno\": \"Group\", \"value\":'Y'},\n\n\n      //   {\"accession\": \"8_Sha\", \"pheno\": \"Origin\", \"value\":'Tajikistan'},\n      //   {\"accession\": \"7_Ler\", \"pheno\": \"Origin\", \"value\": 'Germany'},\n      //   {\"accession\": \"6_Kyo\", \"pheno\": \"Origin\", \"value\": 'Japan'},\n      //   {\"accession\": \"5_Eri\", \"pheno\": \"Origin\", \"value\": 'Sweden'},\n      //   {\"accession\": \"4_Cvi\",  \"pheno\": \"Origin\", \"value\": 'Cape Verde'},\n      //   {\"accession\": \"3_C24\", \"pheno\": \"Origin\", \"value\": 'Portugal'},\n      //   {\"accession\": \"2_An-1\", \"pheno\": \"Origin\", \"value\": 'Belgium'},\n      //   {\"accession\": \"Tsu-0\", \"pheno\": \"Origin\", \"value\": 'Japan'},\n      //   {\"accession\": \"Sku-30\", \"pheno\": \"Origin\", \"value\": 'Sweden'},\n      //   {\"accession\": \"Ler-0\",  \"pheno\": \"Origin\", \"value\": 'Germany'},\n      //   {\"accession\": \"Kas-1\",  \"pheno\": \"Origin\", \"value\":'India'},\n      //   {\"accession\": \"Gro-3\",  \"pheno\": \"Origin\", \"value\":'Sweden'},\n      //   {\"accession\": \"Altai-5\",  \"pheno\": \"Origin\", \"value\":'China'},\n      //   {\"accession\": \"1_Col-0\",  \"pheno\": \"Origin\", \"value\":'United States'}\n      // ]\n\n\n      // console.log(\"data pheno\", data_pheno)\n      // vis.data_pheno = data_pheno;\n\n      vis.data_phenos = data_phenos;\n      // vis.data_barcode = data_barcode;\n      vis.geneAccessions = geneAccessions;\n\n      vis.renderVis();\n    },\n    // This function contains the D3 code for binding data to visual elements.\n    renderVis() {\n      let vis = this;\n\n      // // Add the circle for the nodes\n      // let visBarcodeUpdate = vis.varBarcodeChart\n      //   .selectAll(\".myAccessions\")\n      //   .data(vis.geneAccessions);\n\n      //   // make new rects\n      //   let visBarcodeEnter = visBarcodeUpdate\n      //   .enter()\n      //   .append(\"circle\")\n      //   .attr(\"class\", \"myAccessions\");\n\n      //   //  remove old rects\n      //   visBarcodeUpdate.exit().remove();\n\n      //   visBarcodeEnter\n      //     .merge(visBarcodeUpdate)\n      //     .attr(\"cy\", function(d){ return(vis.yScaleBarcode(d)) +vis.yScaleBarcode.bandwidth()/2})\n      //     .attr(\"cx\", function(d){vis.xScaleBarcode(d)})\n      //     .attr(\"r\", 5)\n      //     .style(\"fill\", \"lightgrey\");\n\n\n      // // Add the circle for the nodes\n      // let visBarcodeUpdateLabels = vis.varBarcodeChart\n      //   .selectAll(\".myLabels\")\n      //   .data(vis.geneAccessions);\n\n      //   // make new rects\n      //   let visBarcodeEnterLabels = visBarcodeUpdateLabels\n      //   .enter()\n      //   .append(\"text\")\n      //   .attr(\"class\", \"myLabels\");\n\n      //   //  remove old rects\n      //   visBarcodeUpdateLabels.exit().remove();\n\n      //   visBarcodeEnterLabels\n      //     .merge(visBarcodeUpdateLabels)\n      //     .attr(\"y\", (d) => vis.yScaleBarcode(d)+ vis.yScaleBarcode.bandwidth()/1.5)\n      //     .attr(\"x\", 10)\n      //     .text(function(d){ return(d)})\n      //     .style(\"text-anchor\", \"start\");\n\n\n\n\n      ////OLD BARCODE \n      // console.log(\"data barcode rendervis:\", vis.data_barcode);\n      // let visBarcodeUpdate = vis.varBarcodeChart\n      //   .selectAll(\".barcode-cell\")\n      //   .data(vis.data_barcode);\n\n      // // make new rects\n      // let visBarcodeEnter = visBarcodeUpdate\n      //   .enter()\n      //   .append(\"rect\")\n      //   .attr(\"class\", \"barcode-cell\");\n\n      //   // remove old rects\n      //   visBarcodeUpdate.exit().remove();\n\n      //   visBarcodeEnter\n      //   .merge(visBarcodeUpdate)\n      //   .attr(\"x\", (d) => vis.xScaleBarcode(d.pos))\n      //   .attr(\"y\", (d) => vis.yScaleBarcode(d.accession))\n      //   // .attr(\"cx\", (d) => vis.xScaleBarcode(d.pos) + vis.xScaleBarcode.bandwidth()/2)\n      //   //   .attr(\"cy\", (d) => vis.yScaleBarcode(d.accession) + vis.yScaleBarcode.bandwidth()/2)\n      //   // .attr(\"r\",vis.xScaleBarcode.bandwidth())\n      //     .attr(\"rx\", 1.5)\n      //     .attr(\"ry\", 1.5)\n          \n      //     .attr(\"width\", vis.xScaleBarcode.bandwidth())\n      //     .attr(\"height\", vis.yScaleBarcode.bandwidth())\n      //     .style(\"fill\", function(d) {\n      //       if (d.base == \"A\"){\n      //         return \"#4daf4a\"\n      //       }\n      //       if (d.base == \"C\"){\n      //         return \"#ff7f00\"\n      //       }\n      //       if (d.base == \"T\"){\n      //         return \"#377eb8\"\n      //       }\n      //       if (d.base == \"G\"){\n      //         return \"#e41a1c\"\n      //       }\n      //       if (d.base == \"X\"){\n      //         // return \"white\"\n      //         return \"rgb(214,218,224)\"\n      //       }\n      //     })\n      //     // .style(\"stroke-width\", 0.5)\n      //     // .style(\"stroke\", \"dimgrey\")\n      //     .style(\"opacity\", 0.9);\n\n      //     A: \"#4daf4a\",\n      // a: \"#4daf4a\",\n      // G: \"#e41a1c\",\n      // g: \"#e41a1c\",\n      // C: \"#ff7f00\",\n      // c: \"#ff7f00\",\n      // T: \"#377eb8\",\n      // t: \"#377eb8\",\n\n\n\n\n      // PHENO BARS 2\n      // console.log(\"data pheno bars 2:\", vis.data_pheno_bars_2);\n      // check new data\n      let visPhenoBarUpdate2 = vis.phenoBars2\n        .selectAll(\".pheno-bar2\")\n        .data(vis.data_pheno_dtf1);\n\n      // make new rects\n      let visPhenoBarEnter2 = visPhenoBarUpdate2\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"pheno-bar2\");\n\n      // remove old rects\n      visPhenoBarUpdate2.exit().remove();\n\n      //merge rects\n      visPhenoBarEnter2\n        .merge(visPhenoBarUpdate2)\n        .attr(\"width\", (d) => vis.xScalePhenoBars2(d.value))\n        .attr(\"height\", vis.yScalePhenoBars2.bandwidth())\n        .attr(\"x\", 0)\n        .attr(\"y\", (d) => vis.yScalePhenoBars2(d.accession))\n        .attr('fill', '#2a8d46')\n        .style(\"opacity\", 0.8);\n\n\n      // PHENO BARS \n      // console.log(\"data pheno bars:\", vis.data_pheno_bars);\n      // check new data\n      let visPhenoBarUpdate = vis.phenoBars\n        .selectAll(\".pheno-bar\")\n        .data(vis.data_pheno_dtf3);\n\n      // make new rects\n      let visPhenoBarEnter = visPhenoBarUpdate\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"pheno-bar\");\n\n      // remove old rects\n      visPhenoBarUpdate.exit().remove();\n\n      //merge rects\n      visPhenoBarEnter\n        .merge(visPhenoBarUpdate)\n        .attr(\"width\", (d) => vis.xScalePhenoBars(d.value))\n        .attr(\"height\", vis.yScalePhenoBars.bandwidth())\n        .attr(\"x\", 0)\n        .attr(\"y\", (d) => vis.yScalePhenoBars(d.accession))\n        .attr('fill', 'steelblue')\n        .style(\"opacity\", 0.8);\n\n\n      // console.log(\"data mutations new:\", vis.data_mutations);\n      // check new data\n      let visGeneUpdate = vis.svgContext\n        .selectAll(\".variants--summary-bar\")\n        .data(vis.data_mutations);\n\n      // make new rects\n      let visGeneEnter = visGeneUpdate\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"variants--summary-bar\");\n\n      // remove old rects\n      visGeneUpdate.exit().remove();\n\n      //merge rects\n      visGeneEnter\n        .merge(visGeneUpdate)\n        .attr(\"height\", (d) => vis.focusHeight - vis.yScaleContext(d.accession))\n        .attr(\"width\", 1.5)\n        .attr(\"x\", (d) => vis.xScaleContext(d.pos))\n        .attr(\"y\", (d) => vis.yScaleContext(d.accession));\n\n      vis.svgContext\n        .selectAll(\".brush\")\n        .call(vis.brush)\n        .call(vis.brush.move, [vis.start, vis.end].map(vis.xScaleContext));\n\n      // console.log(\n      //   \"test brush inital values\",\n      //   vis.start,\n      //   [vis.start, vis.end].map(vis.xScaleContext)[1]\n      // );\n\n      // console.log('test brushed labels', brushedReload)\n\n      // update brush labels\n      updateLabelBrush(\"left\", vis.start, vis.end);\n      updateLabelBrush(\"right\", vis.start, vis.end);\n\n      // update figure when brushing\n      vis.brush.on(\"end\", brushed); //change 'end' to 'brush' if want to see inbetween\n      // use brush for labels!!\n      vis.brush.on(\"brush\", brushUpdate);\n\n      updateVariantFocusChart(vis.rows_data_slice_default);\n\n      // check new data\n      let visPhenoUpdate = vis.phenoChart\n          .selectAll(\".pheno-cell\")\n          .data(vis.data_phenos, (d) => d); //key function?\n\n        // make new cells\n        let visPhenoEnter = visPhenoUpdate\n          .enter()\n          .append(\"rect\")\n          .attr(\"class\", \"pheno-cell\");\n\n        // remove old cells\n        visPhenoUpdate.exit().remove();\n\n\n        // merge cells with existing\n        visPhenoEnter\n          .merge(visPhenoUpdate)\n          // .transition()\n          //     .duration(300)\n          .attr(\"x\", (d) => vis.xScalePhenos(d.pheno))\n          .attr(\"y\", (d) => vis.yScalePhenos(d.accession))\n          .attr(\"rx\", 2.5)\n          .attr(\"ry\", 2.5)\n          .attr(\"width\", vis.xScalePhenos.bandwidth())\n          .attr(\"height\", vis.yScalePhenos.bandwidth())\n          .style(\"fill\", function(d) {\n            if (d.pheno == \"DTF1\"){\n              return vis.colorScaleDTF1(d.value)\n            }\n            if (d.pheno == \"DTF3\"){\n              return vis.colorScaleDTF3(d.value)\n            }\n            if (d.pheno == \"Group\"){\n              return vis.colorScaleGroup(d.value)\n            }\n            if (d.pheno == \"Origin\"){\n              return vis.colorScaleOrigin(d.value)\n            }\n          \n          })\n          .style(\"stroke-width\", 1)\n          .style(\"stroke\", \"dimgrey\")\n          .style(\"opacity\", 0.9);\n\n      \n      // update axes\n      vis.xAxisContextG.call(vis.xAxisContext);\n      vis.yAxisContextG.call(vis.yAxisContext);\n     \n      vis.xAxisBarcodeG.call(vis.xAxisBarcode);\n      vis.xAxisBarcodeG.select(\".x-axis--barcode .domain\").remove(); // to disable rendering the axis line\n      vis.yAxisBarcodeG.call(vis.yAxisBarcode);\n      vis.yAxisBarcodeG.select(\".y-axis--barcode .domain\").remove(); // to disable rendering the axis line\n\n      vis.xAxisFocusG.call(\n        vis.xAxisFocus.tickValues(\n          vis.xScaleFocus.domain().filter(function(d, i) {\n            return !(i % 10); // defines tick interval\n          })\n        )\n      );\n      vis.xAxisFocusG.select(\".x-axis--focus .domain\").remove(); // to disable rendering the axis line\n      vis.yAxisFocusG.call(vis.yAxisFocus);\n      vis.yAxisFocusG.select(\".y-axis--focus .domain\").remove(); // to disable rendering the axis line\n      \n      vis.xAxisPhenosG.call(vis.xAxisPhenos)\n      .selectAll(\"text\")\n        .attr(\"y\", -10)\n        .attr(\"x\", 5)\n        .attr(\"transform\", \"rotate(-45)\")\n        .style(\"text-anchor\", \"start\");\n      vis.xAxisPhenosG.select(\".x-axis--phenos .domain\").remove(); // to disable rendering the axis line\n      vis.yAxisPhenosG.call(vis.yAxisPhenos);\n      vis.yAxisPhenosG.select(\".y-axis--phenos .domain\").remove(); // to disable rendering the axis line\n\n      vis.xAxisPhenoBarsG.call(vis.xAxisPhenoBars);\n      vis.yAxisPhenoBarsG.call(vis.yAxisPhenoBars);\n      vis.yAxisPhenoBarsG.select(\".y-axis--phenobars .domain\").remove(); // to disable rendering the axis line\n\n\n      vis.xAxisPhenoBarsG2.call(vis.xAxisPhenoBars2);\n      vis.yAxisPhenoBarsG2.call(vis.yAxisPhenoBars2);\n      vis.yAxisPhenoBarsG2.select(\".y-axis--phenobars2 .domain\").remove(); // to disable rendering the axis line\n\n      \n      function brushValues({selection}) {\n        \n\n\n        const rangeSelected = selection.map(\n          vis.xScaleContext.invert,\n          vis.xScaleContext\n        );\n        // console.log(\n        //   \"range selected brush: \",\n        //   // rangeSelected,\n        //   Math.round(rangeSelected[0]),\n        //   Math.round(rangeSelected[1])\n        // );\n\n        var startUpdate = Math.round(rangeSelected[0]);\n        var endUpdate = Math.round(rangeSelected[1]);\n\n        return [startUpdate, endUpdate]\n\n\n\n      }\n\n      function brushUpdate({ selection }) {\n        // console.log(\"selection brush end\", { selection });\n        const rangeSelected = selection.map(\n          vis.xScaleContext.invert,\n          vis.xScaleContext\n        );\n        // console.log(\n        //   \"range selected brush end: \",\n        //   // rangeSelected,\n        //   Math.round(rangeSelected[0]),\n        //   Math.round(rangeSelected[1])\n        // );\n\n        var startUpdate = Math.round(rangeSelected[0]);\n        var endUpdate = Math.round(rangeSelected[1]);\n\n        updateLabelBrush(\"left\", startUpdate, endUpdate);\n        updateLabelBrush(\"right\", startUpdate, endUpdate);\n\n        vis.globalBrushStart = startUpdate\n        vis.globalBrushEnd = endUpdate;\n        // console.log('global brush values', vis.globalBrushStart, vis.globalBrushEnd)\n      }\n\n      // updates labels brush\n      function updateLabelBrush(side, start, end) {\n        if (side == \"left\") {\n          var brushClass = \".brushLabelL\";\n          var style = \"end\";\n          var data = [start];\n          var xPos = 0;\n        } else {\n          brushClass = \".brushLabelR\";\n          style = \"start\";\n          data = [end];\n          xPos = 1;\n        }\n        const textUpdate = vis.svgContextLabels\n          .selectAll(brushClass)\n          .data(data);\n\n        textUpdate.selectAll(\"text\").remove(); //remove old label\n\n        const textEnter = textUpdate.append(\"text\");\n\n        const textExit = textUpdate.exit().remove();\n\n        textEnter\n          .merge(textUpdate)\n          .style(\"text-anchor\", style)\n          .attr(\"x\", [start, end].map(vis.xScaleContext)[xPos])\n          .text((d) => d);\n      }\n\n      function updateVariantFocusChart(data) {\n        var row = vis.svgFocus\n          .selectAll(\".row--accession\")\n          .data([...new Set(data.map((d) => d.accession))])\n          .enter()\n          .append(\"svg:g\")\n          .attr(\"class\", \".row--accession\");\n\n        //  // check new data\n        //  let visCellsUpdate = row\n        //   .selectAll(\".snp-cell\")\n        //   .data(function (d,i) {\n        //     console.log(' data for cells matrix: ', d.map(function(a) { return {value: a, row: i}; } ))\n        //     return d.map(function(a) { return {value: a, row: i}; } ) })\n\n        // check new data\n        let visCellsUpdate = vis.svgFocus\n          .selectAll(\".snp-cell\")\n          .data(data, (d) => d); //key function?\n\n        // make new cells\n        let visCellsEnter = visCellsUpdate\n          .enter()\n          .append(\"rect\")\n          .attr(\"class\", \"snp-cell\");\n\n        // remove old cells\n        visCellsUpdate.exit().remove();\n\n        // merge cells with existing\n        visCellsEnter\n          .merge(visCellsUpdate)\n          // .transition()\n          //     .duration(300)\n          .attr(\"x\", (d) => vis.xScaleFocus(d.pos))\n          .attr(\"y\", (d) => vis.yScaleFocus(d.accession))\n          .attr(\"rx\", 1.5)\n          .attr(\"ry\", 1.5)\n          .attr(\"width\", vis.xScaleFocus.bandwidth())\n          .attr(\"height\", vis.yScaleFocus.bandwidth())\n          .style(\"fill\", (d) => vis.colors[d.base])\n          // .style(\"stroke-width\", 0.5)\n          // .style(\"stroke\", \"white\")\n          .style(\"opacity\", 0.8);\n      }\n\n      function brushed({ selection }) {\n        // console.log(\"selection brush\", { selection });\n        const rangeSelected = selection.map(\n          vis.xScaleContext.invert,\n          vis.xScaleContext\n        );\n        // console.log(\n        //   \"range selected: \",\n        //   // rangeSelected,\n        //   Math.round(rangeSelected[0]),\n        //   Math.round(rangeSelected[1])\n        // );\n\n        var startUpdate = Math.round(rangeSelected[0]);\n        var endUpdate = Math.round(rangeSelected[1]);\n        // console.log(\"start and end of brush: \", startUpdate, endUpdate);\n\n\n        vis.xScaleFocus.domain(d3.range(startUpdate, endUpdate + 1));\n\n        // console.log(\"brush range\", d3.extent(vis.xScaleFocus.domain()));\n\n        // // update brush labels\n        // updateLabelBrush(\"left\",startUpdate,endUpdate);\n        // updateLabelBrush(\"right\",startUpdate,endUpdate);\n\n        //rows data updated\n        var flat_data_slice_updated = [\n          vis.flat_data.pos,\n          vis.flat_data.base,\n          vis.flat_data.base_hover,\n          vis.flat_data.accession,\n        ].map(\n          vis.taker(\n            vis.filter(\n              vis.flat_data.pos,\n              (d) => d >= startUpdate && d <= endUpdate\n            )\n          )\n        );\n        // console.log(\"flat data slice updated\", flat_data_slice_updated);\n\n        var flat_data_slice_updated_final = {\n          pos: flat_data_slice_updated[0],\n          base: flat_data_slice_updated[1],\n          base_hover: flat_data_slice_updated[2],\n          accession: flat_data_slice_updated[3],\n        };\n        // console.log(\"rows updated flat\", flat_data_slice_updated_final);\n\n        var length = (endUpdate - startUpdate + 1) * vis.nr_accessions;\n        // console.log(\"nr of cells to render\", length);\n\n        var rows_data_slice_updated = Array.from({ length }, (_, i) => ({\n          pos: flat_data_slice_updated_final.pos[i], // position type should be changed from string to float\n          base: flat_data_slice_updated_final.base[i],\n          base_hover: flat_data_slice_updated_final.base_hover[i],\n          accession: flat_data_slice_updated_final.accession[i],\n        }));\n        // console.log(\"rows updated !\", rows_data_slice_updated);\n\n        vis.svgFocus.selectAll(\".x-axis--focus\").call(\n          vis.xAxisFocus.tickValues(\n            vis.xScaleFocus.domain().filter(function(d, i) {\n              return !(i % 20); // defines tick interval\n            })\n          )\n        );\n        vis.svgFocus.select(\".x-axis--focus .domain\").remove(); // to disable rendering the axis line\n\n        updateVariantFocusChart(rows_data_slice_updated);\n\n        vis.svgContext\n          .selectAll(\".variants--summary-bar\")\n          .on(\"mouseover\", mouseoverBar)\n          .on(\"mousemove\", mousemoveBar)\n          .on(\"mouseleave\", mouseleaveBar);\n\n        vis.svgFocus\n          .selectAll(\".snp-cell\")\n          .on(\"mouseover\", mouseover)\n          .on(\"mousemove\", mousemove)\n          .on(\"mouseleave\", mouseleave);\n      }\n\n      var mouseoverBarcode = function() {\n        d3.select(\"#tooltipBarcode\")\n          .style(\"display\", \"block\")\n          .style(\"opacity\", 0.8)\n          // .style(\"color\", \"white\");\n          .style(\"color\", \"black\");\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", 1);\n      };\n\n\n      var mousemoveBarcode = function(event, d) {\n        d3.select(\"#tooltipBarcode\")\n          // .style(\"display\", \"block\")\n          .html(\n            \" <strong>pos:</strong> \" +\n              d.pos \n          )\n          // .style(\"left\", d3.pointer(event)[0] + 530 + \"px\")\n          // .style(\"top\", d3.pointer(event)[1] + 150 + \"px\");\n\n          .style(\"left\", d3.pointer(event)[0] + (vis.leftColWidth*1) + \"px\")\n          .style(\"top\", d3.pointer(event)[1]  + (vis.topRowHeight*5) + \"px\");\n\n     \n      };\n\n      var mouseleaveBarcode = function() {\n        d3.select(\"#tooltipBarcode\").style(\"display\", \"none\");\n        d3.select(this)\n          .style(\"stroke\", \"none\")\n          .style(\"opacity\", 0.8);\n      };\n\n      var mouseover = function() {\n        d3.select(\"#tooltip\")\n          .style(\"display\", \"block\")\n          .style(\"opacity\", 0.8)\n          // .style(\"color\", \"white\");\n          .style(\"color\", \"black\");\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", 1);\n      };\n\n\n      var mousemove = function(event, d) {\n        d3.select(\"#tooltip\")\n          // .style(\"display\", \"block\")\n          .html(\n            \"<strong>base:</strong> \" +\n              d.base_hover +\n              \"<br/>\" +\n              \"<strong>position:</strong> \" +\n              d.pos +\n              \"<br/>\" +\n              \"<strong>accession:</strong> \" +\n              d.accession\n          )\n          // .style(\"left\", d3.pointer(event)[0] + 530 + \"px\")\n          // .style(\"top\", d3.pointer(event)[1] + 150 + \"px\");\n\n          .style(\"left\", d3.pointer(event)[0] + (vis.leftColWidth*2) + \"px\")\n          .style(\"top\", d3.pointer(event)[1]  + (vis.topRowHeight*2) + \"px\");\n\n     \n      };\n\n      var mouseleave = function() {\n        d3.select(\"#tooltip\").style(\"display\", \"none\");\n        d3.select(this)\n          .style(\"stroke\", \"none\")\n          .style(\"opacity\", 0.8);\n      };\n\n      var mouseleaveBar = function() {\n        d3.select(\"#tooltip-bars\").style(\"display\", \"none\");\n        d3.select(this)\n          .style(\"stroke\", \"none\")\n          .style(\"opacity\", 0.8);\n      };\n\n      var mouseoverBar = function() {\n        d3.select(\"#tooltip-bars\")\n          .style(\"display\", \"block\")\n          .style(\"opacity\", 0.8)\n          // .style(\"color\", \"white\");\n          .style(\"color\", \"black\");\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", 1);\n      };\n\n      var mousemoveBar = function(event, d) {\n        d3.select(\"#tooltip-bars\")\n          // .style(\"display\", \"block\")\n          .html(\n            \"<strong>#SNPs:</strong> \" +\n              d.accession +\n              \"<br/>\" +\n              \"<strong>Position:</strong> \" +\n              d.pos\n          )\n          .style(\"left\", d3.pointer(event)[0] + (vis.leftColWidth*2) + \"px\")\n          .style(\"top\", d3.pointer(event)[1] + (vis.topRowHeight*0.6) + \"px\");\n      };\n\n      var mouseleavePheno = function() {\n        d3.select(\"#tooltip-pheno\").style(\"display\", \"none\");\n        d3.select(this)\n         .style(\"stroke\", \"darkgrey\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", 0.8);\n      };\n\n      var mouseoverPheno = function() {\n        d3.select(\"#tooltip-pheno\")\n          .style(\"display\", \"block\")\n          .style(\"opacity\", 0.8)\n          .style(\"color\", \"white\");\n          // .style(\"color\", \"black\");\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"2px\")\n          .style(\"opacity\", 1);\n      };\n\n      var mousemovePheno = function(event, d) {\n        d3.select(\"#tooltip-pheno\")\n          // .style(\"display\", \"block\")\n          .html(\n            d.accession +\n              \"<br/>\" +\n              d.value\n          )\n          .style(\"left\", d3.pointer(event)[0] + (vis.leftColWidth*2.2 + vis.midColWidth) + \"px\")\n          .style(\"top\", d3.pointer(event)[1] + (vis.topRowHeight*7) + \"px\");\n      };\n\n      var mouseleavePhenoBar = function() {\n        d3.select(\"#tooltip-bars--pheno\").style(\"display\", \"none\");\n        d3.select(this)\n          .style(\"stroke\", \"white\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", 0.8);\n      };\n\n      var mouseoverPhenoBar = function() {\n        d3.select(\"#tooltip-bars--pheno\")\n          .style(\"display\", \"block\")\n          .style(\"opacity\", 0.8)\n          .style(\"color\", \"white\");\n          // .style(\"color\", \"black\");\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"2px\")\n          .style(\"opacity\", 1);\n     \n      };\n\n      var mousemovePhenoBar = function(event, d) {\n        d3.select(\"#tooltip-bars--pheno\")\n          // .style(\"display\", \"block\")\n          .html(\n              d.accession\n              + \"<br/>\" +\n              d.value\n\n          )\n          .style(\"left\", d3.pointer(event)[0] + (vis.leftColWidth*2 + vis.midColWidth + vis.phenoChartWidth) + \"px\")\n          .style(\"top\", d3.pointer(event)[1] + (vis.topRowHeight*7) + \"px\");\n      };\n\n      var mouseleavePhenoBar2 = function() {\n        d3.select(\"#tooltip-bars--pheno2\").style(\"display\", \"none\");\n        d3.select(this)\n          .style(\"stroke\", \"white\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", 0.8);\n      };\n\n      var mouseoverPhenoBar2 = function() {\n        d3.select(\"#tooltip-bars--pheno2\")\n          .style(\"display\", \"block\")\n          .style(\"opacity\", 0.8)\n          .style(\"color\", \"white\");\n          // .style(\"color\", \"black\");\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"stroke-width\", \"2px\")\n          .style(\"opacity\", 1);\n     \n      };\n\n      var mousemovePhenoBar2 = function(event, d) {\n        d3.select(\"#tooltip-bars--pheno2\")\n          // .style(\"display\", \"block\")\n          .html(\n            d.accession\n              + \"<br/>\" +\n              d.value\n          )\n          .style(\"left\", d3.pointer(event)[0] + (vis.leftColWidth*2 + vis.midColWidth + vis.phenoChartWidth*0.6) + \"px\")\n          .style(\"top\", d3.pointer(event)[1] + (vis.topRowHeight*7) + \"px\");\n      };\n\n      // function to update the MSA ordering\n      function updateMSAorder(sortingOption) {\n        // console.log(\"option chosen: \", sortingOption);\n\n        vis.yScaleBarcode.domain(sortingOption);\n        vis.varBarcodeChart.select(\".y-axis--barcode\").call(vis.yAxisBarcode);\n        vis.varBarcodeChart.select(\".y-axis--barcode .domain\").remove(); // to disable rendering the axis line\n\n        // vis.varBarcodeChart\n        //   .selectAll(\".barcode-cell\")\n        //   .transition()\n        //   .duration(500)\n        //   .attr(\"x\", (d) => vis.xScaleBarcode(d.pos))\n        //   .attr(\"y\", (d) => vis.yScaleBarcode(d.accession));\n\n        vis.varBarcodeChart\n          .selectAll(\".myAccessions\")\n          .transition()\n          .duration(400)\n          .attr(\"cy\", function(d){ return(vis.yScaleBarcode(d)) +vis.yScaleBarcode.bandwidth()/2})\n          .attr(\"cx\", function(d){vis.xScaleBarcode(d)})\n \n\n        vis.varBarcodeChart\n        .selectAll(\".myLabels\")\n          .transition()\n          .duration(400)\n          .attr(\"y\", (d) => vis.yScaleBarcode(d)+ vis.yScaleBarcode.bandwidth()/1.5)\n          // .attr(\"x\", 120);\n          .attr(\"x\", vis.leftColWidth - 20)\n\n\n\n        vis.yScaleFocus.domain(sortingOption);\n        vis.svgFocus.select(\".y-axis--focus\").call(vis.yAxisFocus);\n        vis.svgFocus.select(\".y-axis--focus .domain\").remove(); // to disable rendering the axis line\n\n        vis.svgFocus\n          .selectAll(\".snp-cell\")\n          .transition()\n          .duration(500)\n          .attr(\"x\", (d) => vis.xScaleFocus(d.pos))\n          .attr(\"y\", (d) => vis.yScaleFocus(d.accession));\n        vis.svgFocus\n          .selectAll(\".snp-cell\")\n          .on(\"mouseover\", mouseover)\n          .on(\"mousemove\", mousemove)\n          .on(\"mouseleave\", mouseleave);\n\n          vis.varBarcodeChart\n          .selectAll(\".barcode-cell\")\n          .on(\"mouseover\", mouseoverBarcode)\n          .on(\"mousemove\", mousemoveBarcode)\n          .on(\"mouseleave\", mouseleaveBarcode);\n      }\n\n      // Change row ordering based on select\n      d3.select(\"#selectButtonSort\").on(\"change\", function() {\n        var selected = d3.select(\"#selectButtonSort\").node().value;\n        // console.log(\"selected order MSA: \", selected);\n        updateMSAorder(vis.sortingOptions[selected]);\n        d3.select('#selectButtonSortPhenos').property('value', selected);\n        updatePhenosOrder(vis.sortingOptionsPheno[selected])\n      });\n\n      // function to update the MSA ordering\n      function updatePhenosOrder(sortingOption) {\n        // console.log(\"option chosen: \", sortingOption);\n\n        vis.yScalePhenos.domain(sortingOption);\n        vis.phenoChart.select(\".y-axis--phenos\").call(vis.yAxisPhenos);\n        vis.phenoChart.select(\".y-axis--phenos .domain\").remove(); // to disable rendering the axis line\n\n        vis.phenoChart\n          .selectAll(\".pheno-cell\")\n          .transition()\n          .duration(500)\n          .attr(\"x\", (d) => vis.xScalePhenos(d.pheno))\n          .attr(\"y\", (d) => vis.yScalePhenos(d.accession))\n\n\n        vis.yScalePhenoBars.domain(sortingOption);\n        vis.phenoBars.select(\".y-axis--phenobars\").call(vis.yAxisPhenoBars);\n        vis.phenoBars.select(\".y-axis--phenobars .domain\").remove(); // to disable rendering the axis line\n\n        vis.phenoBars\n          .selectAll(\".pheno-bar\")\n          .transition()\n          .duration(500)\n          .attr(\"width\", (d) => vis.xScalePhenoBars(d.value))\n          .attr(\"height\", vis.yScalePhenoBars.bandwidth())\n          .attr(\"x\", 0)\n          .attr(\"y\", (d) => vis.yScalePhenoBars(d.accession))\n\n\n        vis.yScalePhenoBars2.domain(sortingOption);\n        vis.phenoBars2.select(\".y-axis--phenobars2\").call(vis.yAxisPhenoBars);\n        vis.phenoBars2.select(\".y-axis--phenobars2 .domain\").remove(); // to disable rendering the axis line\n\n        vis.phenoBars2\n          .selectAll(\".pheno-bar2\")\n          .transition()\n          .duration(500)\n          .attr(\"width\", (d) => vis.xScalePhenoBars2(d.value))\n          .attr(\"height\", vis.yScalePhenoBars2.bandwidth())\n          .attr(\"x\", 0)\n          .attr(\"y\", (d) => vis.yScalePhenoBars2(d.accession))\n\n        vis.phenoChart\n        .selectAll(\".pheno-cell\")\n          .on(\"mouseover\", mouseoverPheno)\n          .on(\"mousemove\", mousemovePheno)\n          .on(\"mouseleave\", mouseleavePheno);\n\n\n        vis.phenoBars\n        .selectAll(\".pheno-bar\")\n          .on(\"mouseover\", mouseoverPhenoBar)\n          .on(\"mousemove\", mousemovePhenoBar)\n          .on(\"mouseleave\", mouseleavePhenoBar);\n\n          vis.phenoBars2\n        .selectAll(\".pheno-bar\")\n          .on(\"mouseover\", mouseoverPhenoBar2)\n          .on(\"mousemove\", mousemovePhenoBar2)\n          .on(\"mouseleave\", mouseleavePhenoBar2);\n          \n       \n      }\n\n      // Change row ordering based on select\n      d3.select(\"#selectButtonSortPhenos\").on(\"change\", function() {\n        var selected = d3.select(\"#selectButtonSortPhenos\").node().value;\n        // console.log(\"selected order phenos: \", selected);\n        updatePhenosOrder(vis.sortingOptionsPheno[selected]);\n        d3.select('#selectButtonSort').property('value', selected);\n        updateMSAorder(vis.sortingOptions[selected])\n      });\n\n      // Change brush size based on select\n      d3.select(\"#selectButtonBrush\").on(\"change\", function() {\n        var selectedBrush = d3.select(\"#selectButtonBrush\").node().value;\n        // console.log(\"selected brush size: \", selectedBrush);\n\n        var start_updated = 0;\n        var end_updated = parseInt(selectedBrush) * 100;\n\n        vis.svgContext\n          .selectAll(\".brush\")\n          .call(\n            vis.brush.move,\n            [start_updated, end_updated].map(vis.xScaleContext)\n          );\n\n        // console.log(\n        //   \"test brush values\",\n        //   [start_updated, end_updated].map(vis.xScaleContext)\n        // );\n\n        vis.svgFocus.selectAll(\".x-axis--focus\").call(\n          vis.xAxisFocus.tickValues(\n            vis.xScaleFocus.domain().filter(function(d, i) {\n              return !(i % 20);\n            })\n          )\n        );\n        vis.svgFocus.select(\".x-axis--focus .domain\").remove(); // to disable rendering the axis line\n      });\n\n      // Change with arrow left\n      d3.select(\"#btn-arrow-left\").on(\"click\", function() {\n        // console.log(\"clicked left arrow\");\n        brushArrow(\"left\");\n      });\n\n      // Change focus with arrow right\n      d3.select(\"#btn-arrow-right\").on(\"click\", function() {\n        // console.log(\"clicked right arrow\");\n        brushArrow(\"right\");\n      });\n\n      function brushArrow(arrow) {\n        const rangeOld = d3.extent(vis.xScaleFocus.domain());\n        // console.log(\"old brush start\", rangeOld[0]);\n        // console.log(\"old brush end\", rangeOld[1]);\n\n        if (arrow === \"left\") {\n          if (rangeOld[0] <= 0) {\n            var startUpdate = 0;\n            var endUpdate = rangeOld[1] - 1;\n          } else {\n            startUpdate = rangeOld[0] - 1;\n            endUpdate = rangeOld[1] - 1;\n            // console.log(\n            //   \"new start and end of left brush: \",\n            //   startUpdate,\n            //   endUpdate\n            // );\n          }\n        }\n        if (arrow == \"right\") {\n          if (rangeOld[1] >= vis.length_gene) {\n            startUpdate = rangeOld[0] + 1;\n            endUpdate = vis.length_gene;\n          } else {\n            startUpdate = rangeOld[0] + 1;\n            endUpdate = rangeOld[1] + 1;\n            // console.log(\n            //   \"new start and end of right brush: \",\n            //   startUpdate,\n            //   endUpdate\n            // );\n          }\n        }\n\n        // update brush selection\n        vis.svgContext\n          .selectAll(\".brush\")\n          .call(\n            vis.brush.move,\n            [startUpdate, endUpdate].map(vis.xScaleContext)\n          );\n\n        // update focus domain\n        vis.xScaleFocus.domain(d3.range(startUpdate, endUpdate + 1));\n        // console.log('brush range', d3.extent(vis.xScaleFocus.domain()))\n\n        //rows data updated\n        var flat_data_slice_updated = [\n          vis.flat_data.pos,\n          vis.flat_data.base,\n          vis.flat_data.base_hover,\n          vis.flat_data.accession,\n        ].map(\n          vis.taker(\n            vis.filter(\n              vis.flat_data.pos,\n              (d) => d >= startUpdate && d <= endUpdate\n            )\n          )\n        );\n        // console.log(\"flat data slice updated\", flat_data_slice_updated);\n\n        var flat_data_slice_updated_final = {\n          pos: flat_data_slice_updated[0],\n          base: flat_data_slice_updated[1],\n          base_hover: flat_data_slice_updated[2],\n          accession: flat_data_slice_updated[3],\n        };\n        // console.log(\"rows updated flat\", flat_data_slice_updated_final);\n\n        var length = (endUpdate - startUpdate + 1) * vis.nr_accessions;\n        // console.log(\"nr of cells to render\", length);\n\n        var rows_data_slice_updated = Array.from({ length }, (_, i) => ({\n          pos: flat_data_slice_updated_final.pos[i], // position type should be changed from string to float\n          base: flat_data_slice_updated_final.base[i],\n          base_hover: flat_data_slice_updated_final.base_hover[i],\n          accession: flat_data_slice_updated_final.accession[i],\n        }));\n        // console.log(\"rows updated !\", rows_data_slice_updated);\n\n        vis.svgFocus.selectAll(\".x-axis--focus\").call(\n          vis.xAxisFocus.tickValues(\n            vis.xScaleFocus.domain().filter(function(d, i) {\n              return !(i % 20); // defines tick interval\n            })\n          )\n        );\n        vis.svgFocus.select(\".x-axis--focus .domain\").remove(); // to disable rendering the axis line\n\n        updateVariantFocusChart(rows_data_slice_updated);\n\n        vis.svgFocus\n          .selectAll(\".snp-cell\")\n          .on(\"mouseover\", mouseover)\n          .on(\"mousemove\", mousemove)\n          .on(\"mouseleave\", mouseleave);\n\n          // vis.varBarcodeChart\n          // .selectAll(\".barcode-cell\")\n          // .on(\"mouseover\", mouseoverBarcode)\n          // .on(\"mousemove\", mousemoveBarcode)\n          // .on(\"mouseleave\", mouseleaveBarcode);\n      }\n\n        \n      \n\n      // !! IMPORTANT Hide y-axis when no VR (this is only when full color is loaded)\n      var newAcc = d3.select(\"#selectButtonAccessionData\").node().value;\n      // console.log(\"selected VR from component sequence: \", newAcc);\n\n      const selVR = newAcc.split(\"_\")\n      const selectedVisRef = selVR[1]+\"_\"+selVR[2]\n      // console.log(\"selected VisRef from component sequence: \", selectedVisRef);\n\n\n      // Add the circle for the nodes\n      let visBarcodeUpdate = vis.varBarcodeChart\n        .selectAll(\".myAccessions\")\n        .data(vis.geneAccessions);\n\n        // make new rects\n        let visBarcodeEnter = visBarcodeUpdate\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"myAccessions\");\n\n        //  remove old rects\n        visBarcodeUpdate.exit().remove();\n\n        visBarcodeEnter\n          .merge(visBarcodeUpdate)\n          .attr(\"cy\", function(d){ return(vis.yScaleBarcode(d)) +vis.yScaleBarcode.bandwidth()/2})\n          .attr(\"cx\", function(d){vis.xScaleBarcode(d)})\n          .attr(\"r\", 5)\n          .style(\"fill\", function(d){\n            if (d == selectedVisRef){\n              return \"cornflowerblue\"\n            }\n            else{\n              return \"lightgrey\"\n            }\n          });\n\n\n      // Add the circle for the nodes\n      let visBarcodeUpdateLabels = vis.varBarcodeChart\n        .selectAll(\".myLabels\")\n        .data(vis.geneAccessions);\n\n        // make new rects\n        let visBarcodeEnterLabels = visBarcodeUpdateLabels\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"myLabels\");\n\n        //  remove old rects\n        visBarcodeUpdateLabels.exit().remove();\n\n        visBarcodeEnterLabels\n          .merge(visBarcodeUpdateLabels)\n          .attr(\"y\", (d) => vis.yScaleBarcode(d)+ vis.yScaleBarcode.bandwidth()/1.5)\n          .attr(\"x\", vis.leftColWidth - 20)\n          // .attr(\"x\", 120)\n          .text(function(d){ return(d)})\n          .style(\"text-anchor\", \"end\")\n          .style(\"font-weight\", function(d){\n            if (d == selectedVisRef){\n              return 750\n            }\n            else{\n              return 350\n            }\n          })\n          // .style(\"fill\", function(d){\n          //   if (d == selectedVisRef){\n          //     return \"cornflowerblue\"\n          //   }\n          //   // else{\n          //   //   return \"lightgrey\"\n          //   // }\n          // });\n\n      // if (newAcc === \"_full\") {\n      if (newAcc === \"_ref\") {\n\n        // console.log(\"no vr --> axis should NOT be visible\");\n\n        d3.select(\".y-axis--context\").style(\"opacity\", \"0\");\n        d3.select(\".y-axis-title\").style(\"opacity\", \"0\");\n      } else {\n        // console.log(\"vr --> axis should be visible\");\n\n        d3.select(\".y-axis--context\").style(\"opacity\", \"1\");\n        d3.select(\".y-axis-title\").style(\"opacity\", \"1\");\n\n      }\n\n      //Tooltip at the end otherwise <div> not yet loaded\n\n      // vis.varBarcodeChart\n      //   .selectAll(\".barcode-cell\")\n      //   .on(\"mouseover\", mouseoverBarcode)\n      //   .on(\"mousemove\", mousemoveBarcode)\n      //   .on(\"mouseleave\", mouseleaveBarcode);\n\n      vis.svgFocus\n        .selectAll(\".snp-cell\")\n        .on(\"mouseover\", mouseover)\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseleave\", mouseleave);\n\n      vis.svgContext\n        .selectAll(\".variants--summary-bar\")\n        .on(\"mouseover\", mouseoverBar)\n        .on(\"mousemove\", mousemoveBar)\n        .on(\"mouseleave\", mouseleaveBar);\n\n        vis.phenoChart\n        .selectAll(\".pheno-cell\")\n          .on(\"mouseover\", mouseoverPheno)\n          .on(\"mousemove\", mousemovePheno)\n          .on(\"mouseleave\", mouseleavePheno);\n\n        vis.phenoBars\n        .selectAll(\".pheno-bar\")\n        .on(\"mouseover\", mouseoverPhenoBar)\n        .on(\"mousemove\", mousemovePhenoBar)\n        .on(\"mouseleave\", mouseleavePhenoBar);\n\n        vis.phenoBars2\n        .selectAll(\".pheno-bar2\")\n        .on(\"mouseover\", mouseoverPhenoBar2)\n        .on(\"mousemove\", mousemovePhenoBar2)\n        .on(\"mouseleave\", mouseleavePhenoBar2);\n\n\n    },\n  },\n  mounted() {\n    // function initVis() {\n    let vis = this;\n\n    var globalBrushEnd = 50; \n    vis.globalBrushEnd = globalBrushEnd;\n    \n    var globalBrushStart = 0;\n    vis.globalBrushStart = globalBrushStart;\n\n    // Define dimensions of the visualization\n    const containerWidth = d3.select(\"#chart\").node().clientWidth;\n    const containerHeight = 500;\n\n    const margin = { top: 5, right: 5, bottom: 0, left: 5 };\n    const innerMargin = 12;\n    // const tooltipMargin = 10;\n    const legendHeight = 40;\n\n    const width = containerWidth - margin.left - margin.right;\n    const height = containerHeight - margin.top - margin.left - legendHeight;\n\n    const leftColWidth = (width/10)*1.8;\n    vis.leftColWidth = leftColWidth;\n    const variantSumWidth = 0; //50\n    const variantBarcodeChartWidth = leftColWidth - variantSumWidth - innerMargin;\n    // const midColWidth = 500;\n    const midColWidth = (width/10)*6;\n    vis.midColWidth = midColWidth;\n    const rightColWidth = width - leftColWidth - midColWidth;\n    const phenoBarsWidth = 130;\n    const phenoChartWidth = rightColWidth - phenoBarsWidth;\n    vis.phenoChartWidth = phenoChartWidth;\n\n\n    const topRowHeight = 30;\n    vis.topRowHeight = topRowHeight;\n    const bottomRowHeight = height - topRowHeight - innerMargin * 5;\n\n    // // set dimensions\n    // var margin = { top: 30, right: 20, bottom: 40, left: 80 },\n    //   width =\n    //     (d3.select(\"#msa_chart\").node().clientWidth - margin.left - margin.right)/2,\n    //   height = 550 - margin.top - margin.bottom;\n    var focusHeight = 30;\n    vis.focusHeight = focusHeight;\n    vis.margin = margin;\n    vis.width = width;\n    vis.height = height;\n\n    // set color scale\n    var colors = {\n      A: \"#4daf4a\",\n      a: \"#4daf4a80\", // 99 is 60% transparency\n      G: \"#e41a1c\",\n      g: \"#e41a1c80\",\n      C: \"#ff7f00\",\n      c: \"#ff7f0080\",\n      T: \"#377eb8\",\n      t: \"#377eb880\",\n      // \"-\": \"#E6E6E6\",\n      \"-\": \"rgb(214,218,224)\",\n      // \"*\": \"rgb(240,240,244)\",\n      \"*\": \"rgb(39,43,50)\",\n      // \"*\": \"#686868\",\n      \"=\": \"#FAFAFA\",\n    };\n    vis.colors = colors;\n\n    // legendVariants labels\n    var dataLabels = [1, 2, 3, 4, 5, 6, 7];\n    var cols = [\n      \"#4daf4a\",\n      \"#ff7f00\",\n      \"#e41a1c\",\n      \"#377eb8\",\n      // \"#E6E6E6\",\n   \n      // \"rgb(240,240,244)\",\n      \"rgb(39,43,50)\",\n      \"rgb(214,218,224)\",\n      //  \"#686868\",\n      \"#FAFAFA\",\n    ];\n    var bases = [\"A\", \"C\", \"G\", \"T\", \"gap*\", \"no call\", \"identical\"];\n\n    // define the accession orders\n    var orders = {\n      original_map: \"original mapping\",\n      dtf1: \"DTF1 descending\",\n      dtf1_rev: \"DTF1 ascending\",\n      dtf3: \"DTF3 descending\",\n      dtf3_rev: \"DTF3 ascending\",\n      // ref_first: \"reference accessions first\",\n      // ref_last: \"reference accessions last\",\n      // alpha_asc: \"alphabetical\",\n      // alpha_desc: \"alphabetical reversed\",\n      // phylo: \"phylogeny\",\n      // phylo_rev: \"phylogeny reversed\",\n      group: \"group\",\n      group_rev: \"group reversed\",\n      origin: \"origin\",\n      origin_rev: \"origin reversed\",\n      \n    };\n    vis.orders = orders;\n\n    // define the accession orders\n    var ordersPheno = {\n      original_map: \"original mapping\",\n      dtf1: \"DTF1 descending\",\n      dtf1_rev: \"DTF1 ascending\",\n      dtf3: \"DTF3 descending\",\n      dtf3_rev: \"DTF3 ascending\",\n      // ref_first: \"reference accessions first\",\n      // ref_last: \"reference accessions last\",\n      // alpha_asc: \"alphabetical\",\n      // alpha_desc: \"alphabetical reversed\",\n      // phylo: \"phylogeny\",\n      // phylo_rev: \"phylogeny reversed\",\n      group: \"group\",\n      group_rev: \"group reversed\",\n      origin: \"origin\",\n      origin_rev: \"origin reversed\",\n     \n    };\n    vis.ordersPheno = ordersPheno;\n\n    // define brush sizes\n    var brushSizes = {\n      1: \"100 positions\",\n      2: \"200 positions\",\n      3: \"300 positions\",\n      4: \"400 positions\",\n    };\n    vis.brushSizes = brushSizes;\n\n    \n    // initialize scales\n    var xScaleContext = d3.scaleLinear().range([0, midColWidth]);\n    vis.xScaleContext = xScaleContext;\n\n    var yScaleContext = d3.scaleLinear().range([topRowHeight, 0]);\n    vis.yScaleContext = yScaleContext;\n\n    var xScaleBarcode = d3\n      .scaleBand()\n      .range([0, variantBarcodeChartWidth])\n      .padding(0.6);\n    vis.xScaleBarcode = xScaleBarcode;\n\n    var yScaleBarcode = d3\n      .scaleBand()\n      .range([bottomRowHeight, 0])\n      .padding(0.07);\n    vis.yScaleBarcode = yScaleBarcode;\n\n    var xScaleFocus = d3\n      .scaleBand()\n      .range([0, midColWidth])\n      .padding(0.01);\n    vis.xScaleFocus = xScaleFocus;\n\n    var yScaleFocus = d3\n      .scaleBand()\n      .range([bottomRowHeight, 0])\n      .padding(0.008);\n    vis.yScaleFocus = yScaleFocus;\n\n    var xScalePhenos = d3\n      .scaleBand()\n      .range([0, phenoChartWidth])\n      .padding(0.6);\n    vis.xScalePhenos = xScalePhenos;\n\n    var yScalePhenos = d3\n      .scaleBand()\n      .range([bottomRowHeight, 0])\n      .padding(0.3)\n    vis.yScalePhenos = yScalePhenos;\n\n    var yScalePhenoBars = d3\n      .scaleBand()\n      .range([bottomRowHeight, 0])\n      .padding(0.4)\n    vis.yScalePhenoBars = yScalePhenoBars;\n\n    var xScalePhenoBars = d3.scaleLinear()\n        .range([0, phenoBarsWidth/2]);\n    vis.xScalePhenoBars = xScalePhenoBars;\n\n    var yScalePhenoBars2 = d3\n      .scaleBand()\n      .range([bottomRowHeight, 0])\n      .padding(0.4)\n    vis.yScalePhenoBars2 = yScalePhenoBars2;\n\n    var xScalePhenoBars2 = d3.scaleLinear()\n        .range([0, phenoBarsWidth/2]);\n    vis.xScalePhenoBars2 = xScalePhenoBars2;\n\n    var colorScaleDTF1 = d3.scaleLinear()\n      .domain([28, 137])\n      .range(['#d3eecd', '#2a8d46'])\n\n    vis.colorScaleDTF1 = colorScaleDTF1;\n\n    var colorScaleDTF3 = d3.scaleLinear()\n      .domain([28, 116])\n      .range(['#deebf7', '#08519c'])\n\n    vis.colorScaleDTF3 = colorScaleDTF3;\n\n    var colorScaleGroup = d3.scaleOrdinal()\n      .domain(['X', 'Y'])\n      .range(['black', 'white'])\n\n    vis.colorScaleGroup = colorScaleGroup;\n\n    var colorScaleOrigin = d3.scaleOrdinal()\n      .domain(['United States', 'Belgium', 'Portugal', 'Cape Verde', 'Sweden', 'Japan', 'Germany', 'Tajikistan', 'India', 'China'])\n      // .range(['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd'])\n      //.range(['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'])\n      .range(['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'])\n\n    vis.colorScaleOrigin = colorScaleOrigin;\n\n    //initialize axes\n    var xAxisContext = d3\n      .axisBottom()\n      .scale(vis.xScaleContext)\n      .tickSizeOuter(0);\n    vis.xAxisContext = xAxisContext;\n\n    var yAxisContext = d3\n      .axisLeft(vis.yScaleContext)\n      .ticks(2)\n      .tickSizeOuter(0);\n    vis.yAxisContext = yAxisContext;\n\n    var xAxisBarcode = d3.axisTop(vis.xScaleBarcode).tickValues([]);\n    vis.xAxisBarcode = xAxisBarcode;\n\n    var yAxisBarcode = d3.axisLeft(vis.yScaleBarcode).tickValues([]);\n    vis.yAxisBarcode = yAxisBarcode;\n\n    var xAxisFocus = d3.axisTop(vis.xScaleFocus);\n    vis.xAxisFocus = xAxisFocus;\n\n    var yAxisFocus = d3.axisLeft(vis.yScaleFocus).tickValues([]);\n    vis.yAxisFocus = yAxisFocus;\n\n    var xAxisPhenos = d3.axisTop(vis.xScalePhenos);\n    vis.xAxisPhenos = xAxisPhenos;\n\n    var yAxisPhenos = d3.axisRight(vis.yScalePhenos).tickValues([]);\n    vis.yAxisPhenos = yAxisPhenos;\n\n    var yAxisPhenoBars = d3.axisRight(vis.yScalePhenoBars).tickValues([]);\n    vis.yAxisPhenoBars = yAxisPhenoBars;\n\n    var xAxisPhenoBars = d3\n      .axisTop()\n      .scale(vis.xScalePhenoBars)\n      .ticks(3)\n      .tickSizeOuter(0);\n    vis.xAxisPhenoBars = xAxisPhenoBars;\n\n    var yAxisPhenoBars2 = d3.axisRight(vis.yScalePhenoBars2).tickValues([]);\n    vis.yAxisPhenoBars2 = yAxisPhenoBars2;\n\n    var xAxisPhenoBars2 = d3\n      .axisTop()\n      .scale(vis.xScalePhenoBars2)\n      .ticks(3)\n      .tickSizeOuter(0);\n    vis.xAxisPhenoBars2 = xAxisPhenoBars2;\n\n    // initalize brush\n    var brush = d3.brushX().extent([\n      [0, 0],\n      [midColWidth, focusHeight],\n    ]);\n    vis.brush = brush;\n\n    const arrowLeft = d3\n    .select(\"#footer-col-right\")\n      .attr(\n        \"transform\",\n        `translate(${leftColWidth}, ${0})`\n      );\n\n\n    // Prepare the overall layout\n    const svg = d3\n      .select(\"#chart\")\n      .append(\"svg\")\n      .attr(\"width\", containerWidth)\n      .attr(\"height\", containerHeight)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    vis.svg = svg;\n\n    const svgContext = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${leftColWidth}, 10)`);\n\n    vis.svgContext = svgContext;\n\n    svgContext\n      .append(\"rect\")\n      .attr(\"class\", \"background-gene--context\")\n      .attr(\"width\", midColWidth)\n      .attr(\"height\", topRowHeight);\n    // .style(\"fill\", \"lightblue\");\n\n    // append brush\n    svgContext\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .attr(\"transform\", \"translate(0,\" + 0 + \")\");\n\n    const svgContextLabels = svgContext\n      .append(\"g\")\n      .attr(\"class\", \"brushLabels\")\n      .style(\"font-size\", 11)\n      .style(\"font-family\", \"sans-serif\")\n      .style(\"fill\", \"cornflowerblue\")\n      .style(\"font-weight\", 600)\n      .attr(\"transform\", `translate(${0}, ${vis.margin.top - 10})`);\n\n    vis.svgContextLabels = svgContextLabels;\n\n    var labelL = vis.svgContextLabels.append(\"g\").attr(\"class\", \"brushLabelL\");\n\n    vis.labelL = labelL;\n\n    var labelR = vis.svgContextLabels.append(\"g\").attr(\"class\", \"brushLabelR\");\n\n    vis.labelR = labelR;\n\n    const varBarcodeChart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${innerMargin*1}, ${topRowHeight + innerMargin * 6})`);\n\n    vis.varBarcodeChart = varBarcodeChart;\n\n    vis.varBarcodeChart\n      .append(\"rect\")\n      .attr(\"class\", \"background-summary\")\n      .attr(\"width\", variantBarcodeChartWidth - 1*innerMargin)\n      .attr(\"height\", bottomRowHeight)\n      // .style(\"fill\", \"lightgrey\")\n      // .style(\"opacity\", \"0.2\");\n      .style(\"fill\", \"white\")\n      // .style(\"opacity\", \"\");\n\n    const phenoChart = svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${leftColWidth + midColWidth}, ${topRowHeight +\n          innerMargin * 6})`\n      );\n\n    vis.phenoChart = phenoChart;\n\n    vis.phenoChart\n      .append(\"rect\")\n      .attr(\"class\", \"background-summary\")\n      .attr(\"width\", phenoChartWidth/2)\n      .attr(\"height\", bottomRowHeight)\n      .style(\"fill\", \"white\")\n      .style(\"opacity\", \"1\");\n\n      const phenoBars = svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${leftColWidth + midColWidth + phenoChartWidth + innerMargin/2 + phenoBarsWidth/2}, ${topRowHeight +\n          innerMargin * 6})`\n      );\n\n    vis.phenoBars = phenoBars;\n\n    vis.phenoBars\n      .append(\"rect\")\n      .attr(\"class\", \"background-summary-phenobar\")\n      .attr(\"width\", phenoBarsWidth/2)\n      .attr(\"height\", bottomRowHeight)\n      .style(\"fill\", \"steelblue\")\n      .style(\"opacity\", \"0.1\");\n\n\n      const phenoBars2 = svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${leftColWidth + midColWidth + phenoChartWidth}, ${topRowHeight +\n          innerMargin * 6})`\n      );\n\n    vis.phenoBars2 = phenoBars2;\n\n    vis.phenoBars2\n      .append(\"rect\")\n      .attr(\"class\", \"background-summary-phenobar\")\n      .attr(\"width\", phenoBarsWidth/2)\n      .attr(\"height\", bottomRowHeight)\n      .style(\"fill\", \"#2a8d46\")\n      .style(\"opacity\", \"0.1\");\n\n\n\n    const svgFocus = svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        `translate(${leftColWidth}, ${topRowHeight + innerMargin * 6})`\n      );\n\n    vis.svgFocus = svgFocus;\n\n    // append empty axis groups\n    var xAxisContextG = vis.svgContext\n      .append(\"g\")\n      .attr(\"class\", \"x-axis--context\")\n      .style(\"font-size\", 10)\n      .attr(\"transform\", \"translate(0,\" + focusHeight + \")\");\n    vis.xAxisContextG = xAxisContextG;\n\n    // append empty axis groups\n    var yAxisContextG = vis.svgContext\n      .append(\"g\")\n      .attr(\"class\", \"y-axis--context\")\n      .style(\"font-size\", 10)\n      .attr(\"transform\", \"translate(0,\" + 0 + \")\");\n    vis.yAxisContextG = yAxisContextG;\n\n    // Append both axis titles\n    vis.svgContext\n      .append(\"text\")\n      .attr(\"class\", \"x-axis-title\")\n      .attr(\"y\", vis.margin.top + vis.focusHeight + innerMargin * 2)\n      .attr(\"x\", midColWidth / 2)\n      .attr(\"dy\", \"0.5em\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 10)\n      .style(\"font-family\", \"sans-serif\")\n      // .style(\"font-weight\", 500)\n      .text(\"Length Gene\");\n\n    vis.svgContext\n      .append(\"text\")\n      .attr(\n        \"transform\",\n        `translate(${-80}, ${vis.focusHeight / 2 - 5}) rotate(-90)`\n      )\n      .attr(\"class\", \"y-axis-title\")\n      .attr(\"y\", vis.focusHeight + innerMargin)\n      .attr(\"x\", -10)\n      .attr(\"dy\", \"0.5em\")\n      // .attr(\"transform\", \"rotate(270)\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 10)\n      .style(\"font-family\", \"sans-serif\")\n      .text(\"# SNPs\");\n\n    // Append both axis titles\n    vis.phenoBars\n      .append(\"text\")\n      .attr(\"class\", \"x-axis-title\")\n      .attr(\"y\", -30)\n      .attr(\"x\", phenoBarsWidth / 4)\n      .attr(\"dy\", \"0.5em\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 10)\n      .style(\"font-family\", \"sans-serif\")\n      // .style(\"font-weight\", 500)\n      .text(\"DTF3\");\n\n    // Append both axis titles\n    vis.phenoBars2\n      .append(\"text\")\n      .attr(\"class\", \"x-axis-title\")\n      .attr(\"y\", -30)\n      .attr(\"x\", phenoBarsWidth / 4)\n      .attr(\"dy\", \"0.5em\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 10)\n      .style(\"font-family\", \"sans-serif\")\n      // .style(\"font-weight\", 500)\n      .text(\"DTF1\");\n\n    var xAxisBarcodeG = vis.varBarcodeChart\n      .append(\"g\")\n      .attr(\"class\", \"x-axis--barcode\")\n      .style(\"font-size\", 10);\n    // .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    vis.xAxisBarcodeG = xAxisBarcodeG;\n\n    var yAxisBarcodeG = vis.varBarcodeChart\n      .append(\"g\")\n      .attr(\"class\", \"y-axis--barcode\")\n      .style(\"font-size\", 10);\n    vis.yAxisBarcodeG = yAxisBarcodeG;\n\n    var xAxisFocusG = vis.svgFocus\n      .append(\"g\")\n      .attr(\"class\", \"x-axis--focus\")\n      .style(\"font-size\", 10);\n    // .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    vis.xAxisFocusG = xAxisFocusG;\n\n    var yAxisFocusG = vis.svgFocus\n      .append(\"g\")\n      .attr(\"class\", \"y-axis--focus\")\n      .style(\"font-size\", 10);\n    vis.yAxisFocusG = yAxisFocusG;\n\n    var xAxisPhenosG = vis.phenoChart\n      .append(\"g\")\n      .attr(\"class\", \"x-axis--phenos\")\n      .style(\"font-size\", 10);\n    // .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    vis.xAxisPhenosG = xAxisPhenosG;\n\n    var yAxisPhenosG = vis.phenoChart\n      .append(\"g\")\n      .attr(\"class\", \"y-axis--phenos\")\n      .style(\"font-size\", 10);\n    vis.yAxisPhenosG = yAxisPhenosG;\n\n    var xAxisPhenoBarsG = vis.phenoBars\n      .append(\"g\")\n      .attr(\"class\", \"x-axis--phenobars\")\n      .style(\"font-size\", 10);\n    // .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    vis.xAxisPhenoBarsG = xAxisPhenoBarsG;\n\n    var yAxisPhenoBarsG = vis.phenoBars\n      .append(\"g\")\n      .attr(\"class\", \"y-axis--phenobars\")\n      .style(\"font-size\", 10);\n    vis.yAxisPhenoBarsG = yAxisPhenoBarsG;\n\n    var xAxisPhenoBarsG2 = vis.phenoBars2\n      .append(\"g\")\n      .attr(\"class\", \"x-axis--phenobars2\")\n      .style(\"font-size\", 10);\n    // .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    vis.xAxisPhenoBarsG2 = xAxisPhenoBarsG2;\n\n    var yAxisPhenoBarsG2 = vis.phenoBars2\n      .append(\"g\")\n      .attr(\"class\", \"y-axis--phenobars2\")\n      .style(\"font-size\", 10);\n    vis.yAxisPhenoBarsG2 = yAxisPhenoBarsG2;\n\n    // append legend\n    var legendVariants = svgFocus\n      .selectAll(\".legendVariants\")\n      .data(dataLabels)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"legendVariants\")\n      .attr(\"transform\", function(d, i) {\n        return (\n          \"translate(\" +\n          80 * i +\n          \",\" +\n          (topRowHeight + bottomRowHeight - 20) +\n          \")\"\n        );\n      });\n\n    legendVariants\n      .append(\"rect\")\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"rx\", 1.5)\n      .attr(\"ry\", 1.5)\n      .style(\"fill\", function(d, i) {\n        return cols[i];\n      })\n      .style(\"opacity\", 0.8)\n       .style(\"stroke-width\", 0.5)\n        .style(\"stroke\", \"dimgrey\")\n\n    legendVariants\n      .append(\"text\")\n      .attr(\"x\", 18)\n      .attr(\"y\", 8)\n      .attr(\"dy\", \".35em\")\n      .text(function(d, i) {\n        return bases[i];\n      });\n\n    // add the options to the button\n    d3.select(\"#selectButtonSort\")\n      .selectAll(\"myOptions\")\n      .data(Object.keys(orders))\n      .enter()\n      .append(\"option\")\n      .text(function(d) {\n        return orders[d];\n      }) // text showed in the menu\n      .attr(\"value\", function(d) {\n        return d;\n      }); // corresponding value returned by the button\n    // console.log(\"orders\", Object.keys(orders));\n\n    // add the options to the button\n    d3.select(\"#selectButtonBrush\")\n      .selectAll(\"myOptionsBrush\")\n      .data(Object.keys(brushSizes))\n      .enter()\n      .append(\"option\")\n      .text(function(d) {\n        return brushSizes[d];\n      }) // text showed in the menu\n      .attr(\"value\", function(d) {\n        return d;\n      }); // corresponding value returned by the button\n\n      // add the options to the button\n    d3.select(\"#selectButtonSortPhenos\")\n      .selectAll(\"myOptions\")\n      .data(Object.keys(ordersPheno))\n      .enter()\n      .append(\"option\")\n      .text(function(d) {\n        return ordersPheno[d];\n      }) // text showed in the menu\n      .attr(\"value\", function(d) {\n        return d;\n      }); // corresponding value returned by the button\n    // console.log(\"orders\", Object.keys(orders));\n\n    // // set default option\n    // d3.select(\"#selectButtonBrush\").property(\"value\", 1);\n\n    // create a tooltip\n    // var tooltip = d3\n    //   .select(\"#msa_chart\")\n    //   .append(\"div\")\n    //   .attr(\"class\", \"tooltip\")\n    //   .style(\"background-color\", \"black\")\n    //   .style(\"opacity\", 0)\n    //   .style(\"border\", \"solid\")\n    //   .style(\"border-width\", \"0px\")\n    //   .style(\"border-radius\", \"3px\")\n    //   .style(\"padding\", \"5px\");\n    // vis.tooltip = tooltip;\n\n    // }\n    // initVis();\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n/* #tooltip {\n  position: absolute;\n  display: none;\n  background-color: black;\n  border: solid;\n  border-width: 0px;\n  border-radius: 3px;\n  padding: 5px;\n  text-align: left;\n} */\n\n#tooltipBarcode {\n  position: absolute;\n  opacity: 0;\n  background: #fff;\n  box-shadow: 2px 2px 3px 0px rgb(92 92 92 / 0.5);\n  border: 1px solid #ddd;\n  font-size: 0.8rem;\n  font-weight: 600;\n  padding: 2px 8px;\n  text-align: left;\n}\n\n#tooltip {\n  position: absolute;\n  opacity: 0;\n  background: #fff;\n  box-shadow: 2px 2px 3px 0px rgb(92 92 92 / 0.5);\n  border: 1px solid #ddd;\n  font-size: 0.8rem;\n  font-weight: 600;\n  padding: 2px 8px;\n  text-align: left;\n}\n\n#tooltip-bars {\n  position: absolute;\n  opacity: 0;\n  background: #fff;\n  box-shadow: 2px 2px 3px 0px rgb(92 92 92 / 0.5);\n  border: 1px solid #ddd;\n  font-size: 0.8rem;\n  font-weight: 600;\n  padding: 2px 8px;\n  text-align: left;\n}\n\n#tooltip-pheno {\n  position: absolute;\n  opacity: 0;\n  /* background: #fff; */\n  background: black;\n  color: white;\n  box-shadow: 2px 2px 3px 0px rgb(92 92 92 / 0.5);\n  /* border: 1px solid #ddd; */\n  border: 1px solid black;\n  font-size: 0.8rem;\n  font-weight: 600;\n  padding: 2px 8px;\n  text-align: left;\n}\n\n#tooltip-bars--pheno {\n  position: absolute;\n  opacity: 0;\n  background: black;\n  color: white;\n  box-shadow: 2px 2px 3px 0px rgb(92 92 92 / 0.5);\n  border: 1px solid black;\n  font-size: 0.8rem;\n  font-weight: 600;\n  padding: 2px 8px;\n  text-align: left;\n}\n\n#tooltip-bars--pheno2 {\n  position: absolute;\n  opacity: 0;\n  background: black;\n  color: white;\n  box-shadow: 2px 2px 3px 0px rgb(92 92 92 / 0.5);\n  border: 1px solid black;\n  font-size: 0.8rem;\n  font-weight: 600;\n  padding: 2px 8px;\n  text-align: left;\n}\n\n\n.selectButtonVariants {\n  margin-left: 5px;\n  margin-right: 20px;\n}\n\n.selectLabelVariants {\n  display: inline;\n  float: left;\n  margin-left: 240px;\n  margin-top: 0px;\n  font-weight: 700;\n}\n\n.background-gene--context {\n  /* fill: slategray; */\n  /* fill: #8da0cb; */\n  fill: #e7298a;\n  fill-opacity: 0.06;\n}\n\n/* .variants--summary {\n  stroke: black;\n  stroke-width: 1.5;\n  opacity: 0.2;\n} */\n\n.variants--summary-bar {\n  /* fill: rgb(190, 99, 150); */\n  fill: #e7298a;\n  /* fill: #8da0cb; */\n  opacity: 0.8;\n}\n\n.selection {\n  stroke: cornflowerblue;\n  fill: cornflowerblue;\n  fill-opacity: 0.3;\n}\n\n#btn-arrow-left {\n  margin-left: 120px;\n} \n\n#btn-arrow-right {\n  margin-right: 240px;\n} \n\n#header-arrows {\n  padding-bottom: 5px;\n}\n\n#sort_group {\n  margin-left: 180px;\n}\n\n\n\n</style>\n","import { render } from \"./GeneVariantVis.vue?vue&type=template&id=0c68b50f\"\nimport script from \"./GeneVariantVis.vue?vue&type=script&lang=js\"\nexport * from \"./GeneVariantVis.vue?vue&type=script&lang=js\"\n\nimport \"./GeneVariantVis.vue?vue&type=style&index=0&id=0c68b50f&lang=css\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=564ebfd4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=564ebfd4&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/src/jquery.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\n\nconst app =createApp(App)\napp.config.productionTip = false;\n\napp.mount('#app')\n\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./GeneVariantVis.vue?vue&type=style&index=0&id=0c68b50f&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TreeVis.vue?vue&type=style&index=0&id=2e93dfa7&lang=css\"","module.exports = __webpack_public_path__ + \"img/sort-down.a88d29fd.svg\";","module.exports = __webpack_public_path__ + \"img/arrow-left.b7a1da3d.svg\";","module.exports = __webpack_public_path__ + \"img/arrow-right.4ce51759.svg\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=564ebfd4&lang=css\""],"sourceRoot":""}